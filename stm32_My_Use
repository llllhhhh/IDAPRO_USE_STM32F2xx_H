/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'STM32F207'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct SpecDetailInfo;
struct SpecCustomizeSt;
struct AddrSaveSt;
struct CustItemInfo;
struct $6F30188D67D6DC94A7D8F25D15EA2A85;
struct St20000000;
struct St373C;

/* 1 */
union __declspec(align(8)) __n64
{
  unsigned __int64 n64_u64[1];
  unsigned int n64_u32[2];
  unsigned __int16 n64_u16[4];
  unsigned __int8 n64_u8[8];
  __int64 n64_i64[1];
  int n64_i32[2];
  __int16 n64_i16[4];
  char n64_i8[8];
  float n64_f32[2];
  double n64_f64[1];
};

/* 2 */
union __declspec(align(8)) __n128
{
  unsigned __int64 n128_u64[2];
  unsigned int n128_u32[4];
  unsigned __int16 n128_u16[8];
  unsigned __int8 n128_u8[16];
  __int64 n128_i64[2];
  int n128_i32[4];
  __int16 n128_i16[8];
  char n128_i8[16];
  float n128_f32[4];
  double n128_f64[2];
};

/* 3 */
typedef __n64 int8x8_t;

/* 4 */
typedef __n64 uint8x8_t;

/* 5 */
typedef __n64 int16x4_t;

/* 6 */
typedef __n64 int32x2_t;

/* 7 */
typedef __n64 uint16x4_t;

/* 8 */
typedef __n64 uint32x2_t;

/* 9 */
typedef __n128 int8x16_t;

/* 10 */
typedef __n128 int16x8_t;

/* 11 */
typedef __n128 int32x4_t;

/* 12 */
typedef __n128 int64x2_t;

/* 13 */
typedef __n128 uint8x16_t;

/* 14 */
typedef __n128 uint16x8_t;

/* 15 */
typedef __n128 uint32x4_t;

/* 16 */
typedef __n128 uint64x2_t;

/* 17 */
typedef __n64 poly8x8_t;

/* 18 */
typedef __n64 poly16x4_t;

/* 19 */
typedef __n128 poly16x8_t;

/* 20 */
typedef __n128 poly8x16_t;

/* 21 */
typedef __n64 float32x2_t;

/* 22 */
typedef __n128 float32x4_t;

/* 23 */
typedef __n128 float64x2_t;

/* 24 */
typedef __n128 poly128_t;

/* 25 */
typedef char *va_list;

/* 26 */
typedef int BOOL;

/* 27 */
struct VerInfo
{
  char *field_0;
  char *field_4;
  char *field_8;
  char *field_C;
  int field_10;
  int field_14;
};

/* 60 */
typedef unsigned __int8 uint8_t;

/* 61 */
typedef unsigned __int16 uint16_t;

/* 62 */
typedef unsigned int uint32_t;

/* 91 */
union $D5589250DFE76480A881FCBEBB5947D6::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 28 */
struct $D5589250DFE76480A881FCBEBB5947D6
{
  volatile union $D5589250DFE76480A881FCBEBB5947D6::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 29 */
struct $E973A2C01ED46A74B6F5D7CCD40BDE9D
{
  uint32_t CTRL;
  uint32_t LOAD;
  uint32_t VAL;
  uint32_t CALIB;
};

/* 30 */
struct SysInfo
{
  int Addr6B90;
  __int16 NomalNum;
  __int16 field_6;
  int field_8;
  int field_C;
  int LastFileFlag;
  int saveFolderNameAddr;
  int Addr20015730;
  int field_1C;
  __int16 field_20;
  __int16 field_22;
  int field_24;
  int field_28;
  int field_2C;
  int field_30;
  int field_34;
  int field_38;
  int field_3C;
};

/* 31 */
struct token
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  int field_30;
  int field_34;
  int field_38;
  int field_3C;
  int field_40;
  char field_44;
  char field_45;
  __int16 field_46;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  char field_58[2048];
};

/* 32 */
struct stAddr6B90
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  char field_4;
  char field_5;
  char cmpWithNormalNum;
  char field_7;
  __int16 field_8;
  __int16 field_A;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  int Addr6BC0;
  int field_34;
  int field_38;
  int field_3C;
  int field_40;
  int field_44;
  int field_48;
  int CmdData;
};

/* 33 */
struct struc_4
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  char field_4;
  char field_5;
  char field_6;
  char field_7;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  int Addr6BC0;
  int field_34;
  int field_38;
  int field_3C;
  int field_40;
  int field_44;
  int field_48;
  int field_4C;
};

/* 34 */
struct struc_5
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  char field_4;
  char field_5;
  char field_6;
  char field_7;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  int Addr6BC0;
  int field_34;
  int field_38;
  int field_3C;
  int field_40;
  int field_44;
  int field_48;
  int field_4C;
};

/* 35 */
struct CMD_DATA0
{
  int CalcID;
  char VarCount;
  char field_5;
  char field_6;
  char field_7;
  int CmdID;
  int pos;
  int len;
};

/* 36 */
struct __unaligned __declspec(align(2)) CMD_POS
{
  int CmdID;
  _BYTE gap4[14];
  int FrameIndex;
  __int16 Start;
  __int16 End;
};

/* 37 */
struct __unaligned __declspec(align(1)) CMD_DATA1
{
  int CalcID;
  char RngCount;
  CMD_POS Pcmdpos;
};

/* 38 */
struct __unaligned __declspec(align(1)) CMD_DATA2
{
  int FuncAddr;
  char BinFile;
};

/* 39 */
union CMD_DATA
{
  CMD_DATA0 D0;
  CMD_DATA1 D1;
  CMD_DATA2 D2;
};

/* 40 */
struct __unaligned __declspec(align(1)) CMD_DATA_TYPE
{
  __int16 Cmdtype;
  __int16 field_2;
  CMD_DATA CmdData;
};

/* 41 */
struct PARA
{
  int SHOWBuf;
  char field_4[100];
  int MODE;
  int CmdIdAnsData;
  int CmdIdNum;
};

/* 42 */
struct __unaligned __declspec(align(1)) CALC_FRM
{
  int CalcAddr;
  int CalcWhichFrame;
  char PosCount;
  _BYTE gap9[3];
  int Ppos;
  char which;
  _BYTE gap11[3];
  char field_14;
};

/* 43 */
struct IntructionPara
{
  int ShowBuff;
  int Data;
  int mode;
  int CmdIdAnsData;
  int CmdIdNum;
  int RecvBuff;
  int CommFailError;
};

/* 44 */
struct DiagCommSendCmdPara_FPL
{
  char FramePos;
  char field_1;
  char field_2;
  char field_3;
  CALC_FRM *CalcFrame;
  __int16 Pos;
  char Len;
  int pData;
};

/* 45 */
struct DiagCommSendCmdPara
{
  char TargetRegister;
  int RecvCmdData;
  char Cnt;
  __declspec(align(4)) DiagCommSendCmdPara_FPL FPL;
};

/* 46 */
struct SCAN_ENTER
{
  char FindType;
  char FindCount;
  int pWayAddr;
};

/* 47 */
struct SCAN_WAY
{
  int DefaultSubSys;
  __int16 SysListNum;
  int SysListAddr;
};

/* 48 */
struct __unaligned __declspec(align(1)) DATA_LINK_CAN
{
  char CmdChk;
  char field_1;
  char field_2;
  char field_3;
  int SysKey;
  int Reserve1;
  char BaundRate;
  char InPin;
  char OutPin;
  char WorkMode;
  char FilterNum;
  _BYTE gap11[3];
  int FieldIDAddr;
  char MarkeNum;
  _BYTE gap19[3];
  int MarkeIDAddr;
  __int16 MaxWaitTime;
  __int16 Byte2ByteTime;
  __int16 OverTime;
  __int16 Ans2AnsTime;
  __int16 PacketToPackete;
  __int16 Req2ReqTime;
  char N_PCIType;
  char Blocksize;
  char N_PCITime;
};

/* 49 */
struct DATA_LINK_LAYER
{
  char LinkType;
  char DataPos;
  int DataLinkGeneral;
  int DataLinkCan;
  int DataLinkVPW;
  int DataLinkPWM;
  int DataLinkRS232;
};

/* 51 */
struct JUMP_CMD_INFO
{
  char bCmdNum;
  char field_1;
  char field_2;
  char field_3;
  int IndexAddr;
  int uiStrAdd;
  int bIsMenuCondAddr;
  int CmdDataTypeAddr;
};

/* 52 */
struct VWDS_SYS_INFO
{
  __int16 SpecDSMode;
  char VWChannelMode;
  int SetAddr;
  __int16 EntryCmdNum;
  __int16 field_A;
  int EntryCmdIndexAddr;
  int CMDDATATYPE_entry;
  __int16 InitCmdNum;
  __int16 field_16;
  int InitCmdIndexAddr;
  int CMDDATATYPE_init;
  char Select;
  char ComErrWay;
  int DsGroupAddr;
  __int16 DsCount;
  __int16 field_2A;
  int DsItemInfo;
  char ExitCmdNum;
  char field_31;
  char field_32;
  char field_33;
  int ExitCmdIndex;
  int CMDDATATYPE_exit;
};

/* 53 */
struct FUNCTION_MENU
{
  char IsMenu;
  __int16 ItemCount;
  int TitleID;
  int TextID;
  __int16 Reserve1;
  __int16 field_D;
  int Reserve2;
  int GroupAddr;
};

/* 54 */
enum IRQn
{
  SysTick_IRQn = 0xFFFFFFFF,
};

/* 55 */
enum IRQn_Type
{
  WWDG_IRQn = 0x0,
  PVD_IRQn = 0x1,
  TAMP_STAMP_IRQn = 0x2,
  RTC_WKUP_IRQn = 0x3,
  FLASH_IRQn = 0x4,
  RCC_IRQn = 0x5,
  EXTI0_IRQn = 0x6,
  EXTI1_IRQn = 0x7,
  EXTI2_IRQn = 0x8,
  EXTI3_IRQn = 0x9,
  EXTI4_IRQn = 0xA,
  DMA1_Stream0_IRQn = 0xB,
  DMA1_Stream1_IRQn = 0xC,
  DMA1_Stream2_IRQn = 0xD,
  DMA1_Stream3_IRQn = 0xE,
  DMA1_Stream4_IRQn = 0xF,
  DMA1_Stream5_IRQn = 0x10,
  DMA1_Stream6_IRQn = 0x11,
  ADC_IRQn = 0x12,
  CAN1_TX_IRQn = 0x13,
  CAN1_RX0_IRQn = 0x14,
  CAN1_RX1_IRQn = 0x15,
  CAN1_SCE_IRQn = 0x16,
  EXTI9_5_IRQn = 0x17,
  TIM1_BRK_TIM9_IRQn = 0x18,
  TIM1_UP_TIM10_IRQn = 0x19,
  TIM1_TRG_COM_TIM11_IRQn = 0x1A,
  TIM1_CC_IRQn = 0x1B,
  TIM2_IRQn = 0x1C,
  TIM3_IRQn = 0x1D,
  TIM4_IRQn = 0x1E,
  I2C1_EV_IRQn = 0x1F,
  I2C1_ER_IRQn = 0x20,
  I2C2_EV_IRQn = 0x21,
  I2C2_ER_IRQn = 0x22,
  SPI1_IRQn = 0x23,
  SPI2_IRQn = 0x24,
  USART1_IRQn = 0x25,
  USART2_IRQn = 0x26,
  USART3_IRQn = 0x27,
  EXTI15_10_IRQn = 0x28,
  RTC_Alarm_IRQn = 0x29,
  OTG_FS_WKUP_IRQn = 0x2A,
  TIM8_BRK_TIM12_IRQn = 0x2B,
  TIM8_UP_TIM13_IRQn = 0x2C,
  TIM8_TRG_COM_TIM14_IRQn = 0x2D,
  TIM8_CC_IRQn = 0x2E,
  DMA1_Stream7_IRQn = 0x2F,
  FSMC_IRQn = 0x30,
  SDIO_IRQn = 0x31,
  TIM5_IRQn = 0x32,
  SPI3_IRQn = 0x33,
  UART4_IRQn = 0x34,
  UART5_IRQn = 0x35,
  TIM6_DAC_IRQn = 0x36,
  TIM7_IRQn = 0x37,
  DMA2_Stream0_IRQn = 0x38,
  DMA2_Stream1_IRQn = 0x39,
  DMA2_Stream2_IRQn = 0x3A,
  DMA2_Stream3_IRQn = 0x3B,
  DMA2_Stream4_IRQn = 0x3C,
  ETH_IRQn = 0x3D,
  ETH_WKUP_IRQn = 0x3E,
  CAN2_TX_IRQn = 0x3F,
  CAN2_RX0_IRQn = 0x40,
  CAN2_RX1_IRQn = 0x41,
  CAN2_SCE_IRQn = 0x42,
  OTG_FS_IRQn = 0x43,
  DMA2_Stream5_IRQn = 0x44,
  DMA2_Stream6_IRQn = 0x45,
  DMA2_Stream7_IRQn = 0x46,
  USART6_IRQn = 0x47,
  I2C3_EV_IRQn = 0x48,
  I2C3_ER_IRQn = 0x49,
  OTG_HS_EP1_OUT_IRQn = 0x4A,
  OTG_HS_EP1_IN_IRQn = 0x4B,
  OTG_HS_WKUP_IRQn = 0x4C,
  OTG_HS_IRQn = 0x4D,
  DCMI_IRQn = 0x4E,
  CRYP_IRQn = 0x4F,
  HASH_RNG_IRQn = 0x50,
  NonMaskableInt_IRQn = 0xFFFFFFF2,
  MemoryManagement_IRQn = 0xFFFFFFF4,
  BusFault_IRQn = 0xFFFFFFF5,
  UsageFault_IRQn = 0xFFFFFFF6,
  SVCall_IRQn = 0xFFFFFFFB,
  DebugMonitor_IRQn = 0xFFFFFFFC,
  PendSV_IRQn = 0xFFFFFFFE,
};

/* 56 */
typedef signed __int8 int8_t;

/* 57 */
typedef __int16 int16_t;

/* 58 */
typedef int int32_t;

/* 59 */
typedef __int64 int64_t;

/* 63 */
typedef unsigned __int64 uint64_t;

/* 64 */
typedef signed __int8 int_least8_t;

/* 65 */
typedef __int16 int_least16_t;

/* 66 */
typedef int int_least32_t;

/* 67 */
typedef __int64 int_least64_t;

/* 68 */
typedef unsigned __int8 uint_least8_t;

/* 69 */
typedef unsigned __int16 uint_least16_t;

/* 70 */
typedef unsigned int uint_least32_t;

/* 71 */
typedef unsigned __int64 uint_least64_t;

/* 72 */
typedef signed __int8 int_fast8_t;

/* 73 */
typedef int int_fast16_t;

/* 74 */
typedef int int_fast32_t;

/* 75 */
typedef __int64 int_fast64_t;

/* 76 */
typedef unsigned __int8 uint_fast8_t;

/* 77 */
typedef unsigned int uint_fast16_t;

/* 78 */
typedef unsigned int uint_fast32_t;

/* 79 */
typedef unsigned __int64 uint_fast64_t;

/* 80 */
typedef __int64 intmax_t;

/* 81 */
typedef unsigned __int64 uintmax_t;

/* 82 */
struct $66D82DDD052C4E56CF555D9E592C46CA
{
  volatile uint32_t ISER[8];
  uint32_t RESERVED0[24];
  volatile uint32_t ICER[8];
  uint32_t RSERVED1[24];
  volatile uint32_t ISPR[8];
  uint32_t RESERVED2[24];
  volatile uint32_t ICPR[8];
  uint32_t RESERVED3[24];
  volatile uint32_t IABR[8];
  uint32_t RESERVED4[56];
  volatile uint8_t IP[240];
  uint32_t RESERVED5[644];
  volatile uint32_t STIR;
};

/* 83 */
typedef struct $66D82DDD052C4E56CF555D9E592C46CA NVIC_Type;

/* 84 */
struct $062F7838C2626B799997AE9F2ECBB85D
{
  const volatile uint32_t CPUID;
  volatile uint32_t ICSR;
  volatile uint32_t VTOR;
  volatile uint32_t AIRCR;
  volatile uint32_t SCR;
  volatile uint32_t CCR;
  volatile uint8_t SHP[12];
  volatile uint32_t SHCSR;
  volatile uint32_t CFSR;
  volatile uint32_t HFSR;
  volatile uint32_t DFSR;
  volatile uint32_t MMFAR;
  volatile uint32_t BFAR;
  volatile uint32_t AFSR;
  const volatile uint32_t PFR[2];
  const volatile uint32_t DFR;
  const volatile uint32_t ADR;
  const volatile uint32_t MMFR[4];
  const volatile uint32_t ISAR[5];
};

/* 85 */
typedef struct $062F7838C2626B799997AE9F2ECBB85D SCB_Type;

/* 86 */
struct $6EFD6480714FB139BBA57B2A1F6CE235
{
  volatile uint32_t CTRL;
  volatile uint32_t LOAD;
  volatile uint32_t VAL;
  const volatile uint32_t CALIB;
};

/* 87 */
typedef struct $E973A2C01ED46A74B6F5D7CCD40BDE9D SysTick_Type;

/* 88 */
union $7326726403DF49BA331720317DD6D4F4::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 89 */
struct $7326726403DF49BA331720317DD6D4F4
{
  volatile union $7326726403DF49BA331720317DD6D4F4::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 90 */
typedef struct $D5589250DFE76480A881FCBEBB5947D6 ITM_Type;

/* 92 */
struct $745CDD0A7402F1C2D29E3659A2BE8330
{
  uint32_t RESERVED0;
  const volatile uint32_t ICTR;
  uint32_t RESERVED1;
};

/* 93 */
typedef struct $745CDD0A7402F1C2D29E3659A2BE8330 InterruptType_Type;

/* 94 */
struct $4B570AF83FE98F6915E1D2C1BB43C399
{
  volatile uint32_t DHCSR;
  volatile uint32_t DCRSR;
  volatile uint32_t DCRDR;
  volatile uint32_t DEMCR;
};

/* 95 */
typedef struct $4B570AF83FE98F6915E1D2C1BB43C399 CoreDebug_Type;

/* 96 */
union $C554911D3277B543C64D100E9BC0F7AE::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 97 */
struct $C554911D3277B543C64D100E9BC0F7AE
{
  volatile union $C554911D3277B543C64D100E9BC0F7AE::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 98 */
struct $64955535E6E4B6090A616748C8EBBA1B
{
  const volatile uint32_t TYPE;
  volatile uint32_t CTRL;
  volatile uint32_t RNR;
  volatile uint32_t RBAR;
  volatile uint32_t RASR;
  volatile uint32_t RBAR_A1;
  volatile uint32_t RASR_A1;
  volatile uint32_t RBAR_A2;
  volatile uint32_t RASR_A2;
  volatile uint32_t RBAR_A3;
  volatile uint32_t RASR_A3;
};

/* 99 */
typedef struct $64955535E6E4B6090A616748C8EBBA1B MPU_Type;

/* 100 */
union $3840B68070F0C78DB7B58E49A128712B::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 101 */
struct $3840B68070F0C78DB7B58E49A128712B
{
  volatile union $3840B68070F0C78DB7B58E49A128712B::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 102 */
union $4AB535C4B6C97222BD6DDC6F99F6E405::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 103 */
struct $4AB535C4B6C97222BD6DDC6F99F6E405
{
  volatile union $4AB535C4B6C97222BD6DDC6F99F6E405::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 104 */
union $4B6A21834408D5F1917A9B355CA454B4::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 105 */
struct $4B6A21834408D5F1917A9B355CA454B4
{
  volatile union $4B6A21834408D5F1917A9B355CA454B4::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 106 */
union $C1C6CB5ED8A148F3D8A4DA3DA6180D72::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 107 */
struct $C1C6CB5ED8A148F3D8A4DA3DA6180D72
{
  volatile union $C1C6CB5ED8A148F3D8A4DA3DA6180D72::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 108 */
typedef unsigned int uintptr_t;

/* 109 */
typedef int ptrdiff_t;

/* 110 */
typedef int intptr_t;

/* 112 */
typedef bool __vcrt_bool;

/* 113 */
typedef int errno_t;

/* 114 */
typedef unsigned __int16 wint_t;

/* 115 */
typedef unsigned __int16 wctype_t;

/* 116 */
typedef int __time32_t;

/* 117 */
typedef __int64 __time64_t;

/* 118 */
struct __crt_locale_data_public
{
  const unsigned __int16 *_locale_pctype;
  int _locale_mb_cur_max;
  unsigned int _locale_lc_codepage;
};

/* 119 */
struct __crt_locale_pointers
{
  struct __crt_locale_data *locinfo;
  struct __crt_multibyte_data *mbcinfo;
};

/* 120 */
typedef __crt_locale_pointers *_locale_t;

/* 121 */
struct _Mbstatet
{
  unsigned int _Wchar;
  unsigned __int16 _Byte;
  unsigned __int16 _State;
};

/* 122 */
typedef _Mbstatet mbstate_t;

/* 123 */
typedef __time64_t time_t;

/* 124 */
typedef unsigned int size_t;

/* 125 */
typedef bool __crt_bool;

/* 126 */
union $C9A0FB873457545413FC466531A9FDFE::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 127 */
struct $C9A0FB873457545413FC466531A9FDFE
{
  volatile union $C9A0FB873457545413FC466531A9FDFE::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 128 */
union $9CC50DA7159E340AAEB23C21A3D61363::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 129 */
struct $9CC50DA7159E340AAEB23C21A3D61363
{
  volatile union $9CC50DA7159E340AAEB23C21A3D61363::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 130 */
union $4013BBCAFA1C305C07072827E8B13321::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 131 */
struct $4013BBCAFA1C305C07072827E8B13321
{
  volatile union $4013BBCAFA1C305C07072827E8B13321::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 132 */
union $81862943C65194BF11A889373DB8FAF0::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 133 */
struct $81862943C65194BF11A889373DB8FAF0
{
  volatile union $81862943C65194BF11A889373DB8FAF0::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 134 */
union $D7A6891F658EEADB58D03C8FD4517CA9::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 135 */
struct $D7A6891F658EEADB58D03C8FD4517CA9
{
  volatile union $D7A6891F658EEADB58D03C8FD4517CA9::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 136 */
union $B36F95FFDFE44BAC74003EC88B3A9735::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 137 */
struct $B36F95FFDFE44BAC74003EC88B3A9735
{
  volatile union $B36F95FFDFE44BAC74003EC88B3A9735::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 138 */
struct $185173F42F3CE00F376279AA2232E7D4
{
  volatile unsigned int ISER[8];
  unsigned int RESERVED0[24];
  volatile unsigned int ICER[8];
  unsigned int RSERVED1[24];
  volatile unsigned int ISPR[8];
  unsigned int RESERVED2[24];
  volatile unsigned int ICPR[8];
  unsigned int RESERVED3[24];
  volatile unsigned int IABR[8];
  unsigned int RESERVED4[56];
  volatile uint8_t IP[240];
  unsigned int RESERVED5[644];
  volatile unsigned int STIR;
};

/* 139 */
struct $75697FC44834E2236D2F129F02F25B17
{
  const volatile unsigned int CPUID;
  volatile unsigned int ICSR;
  volatile unsigned int VTOR;
  volatile unsigned int AIRCR;
  volatile unsigned int SCR;
  volatile unsigned int CCR;
  volatile uint8_t SHP[12];
  volatile unsigned int SHCSR;
  volatile unsigned int CFSR;
  volatile unsigned int HFSR;
  volatile unsigned int DFSR;
  volatile unsigned int MMFAR;
  volatile unsigned int BFAR;
  volatile unsigned int AFSR;
  const volatile unsigned int PFR[2];
  const volatile unsigned int DFR;
  const volatile unsigned int ADR;
  const volatile unsigned int MMFR[4];
  const volatile unsigned int ISAR[5];
};

/* 140 */
struct $3577C11AF9E1036D29E933694559E092
{
  volatile unsigned int CTRL;
  volatile unsigned int LOAD;
  volatile unsigned int VAL;
  const volatile unsigned int CALIB;
};

/* 141 */
union $20635C5878C780AA7D54FBE31BB3C516::$BF7E87BB5D1838B65B0BC66F5F6662DC
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile unsigned int u32;
};

/* 142 */
struct $20635C5878C780AA7D54FBE31BB3C516
{
  volatile union $20635C5878C780AA7D54FBE31BB3C516::$BF7E87BB5D1838B65B0BC66F5F6662DC PORT[32];
  unsigned int RESERVED0[864];
  volatile unsigned int TER;
  unsigned int RESERVED1[15];
  volatile unsigned int TPR;
  unsigned int RESERVED2[15];
  volatile unsigned int TCR;
  unsigned int RESERVED3[29];
  volatile unsigned int IWR;
  volatile unsigned int IRR;
  volatile unsigned int IMCR;
  unsigned int RESERVED4[43];
  volatile unsigned int LAR;
  volatile unsigned int LSR;
  unsigned int RESERVED5[6];
  const volatile unsigned int PID4;
  const volatile unsigned int PID5;
  const volatile unsigned int PID6;
  const volatile unsigned int PID7;
  const volatile unsigned int PID0;
  const volatile unsigned int PID1;
  const volatile unsigned int PID2;
  const volatile unsigned int PID3;
  const volatile unsigned int CID0;
  const volatile unsigned int CID1;
  const volatile unsigned int CID2;
  const volatile unsigned int CID3;
};

/* 143 */
struct $C7F0D21C6F293B73E4BB7774556FCCC5
{
  unsigned int RESERVED0;
  const volatile unsigned int ICTR;
  unsigned int RESERVED1;
};

/* 144 */
struct $D28BF3FD8932C52761F6ED75389A2C5E
{
  const volatile unsigned int TYPE;
  volatile unsigned int CTRL;
  volatile unsigned int RNR;
  volatile unsigned int RBAR;
  volatile unsigned int RASR;
  volatile unsigned int RBAR_A1;
  volatile unsigned int RASR_A1;
  volatile unsigned int RBAR_A2;
  volatile unsigned int RASR_A2;
  volatile unsigned int RBAR_A3;
  volatile unsigned int RASR_A3;
};

/* 145 */
struct $FE0399054AD6CFE3427BEA699B05ECC7
{
  volatile unsigned int DHCSR;
  volatile unsigned int DCRSR;
  volatile unsigned int DCRDR;
  volatile unsigned int DEMCR;
};

/* 146 */
union $34F3E55F41C7A9B611FE7849C93C877F::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 147 */
struct $34F3E55F41C7A9B611FE7849C93C877F
{
  volatile union $34F3E55F41C7A9B611FE7849C93C877F::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 148 */
union $28DC0AD3E0109C78235301CCFDB5CA5D::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 149 */
struct $28DC0AD3E0109C78235301CCFDB5CA5D
{
  volatile union $28DC0AD3E0109C78235301CCFDB5CA5D::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 150 */
union $F889DFC2F7AC496E48FBE59FE6F70817::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 151 */
struct $F889DFC2F7AC496E48FBE59FE6F70817
{
  volatile union $F889DFC2F7AC496E48FBE59FE6F70817::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 152 */
union $57DE4CDB2E4CA1BEE1784D3205244C8D::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 153 */
struct $57DE4CDB2E4CA1BEE1784D3205244C8D
{
  volatile union $57DE4CDB2E4CA1BEE1784D3205244C8D::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 154 */
typedef int32_t s32;

/* 155 */
typedef int16_t s16;

/* 156 */
typedef int8_t s8;

/* 157 */
typedef const int32_t sc32;

/* 158 */
typedef const int16_t sc16;

/* 159 */
typedef const int8_t sc8;

/* 160 */
typedef int __IO;

/* 161 */
typedef int __I;

/* 162 */
typedef uint32_t u32;

/* 163 */
typedef uint16_t u16;

/* 164 */
typedef uint8_t u8;

/* 165 */
typedef const uint32_t uc32;

/* 166 */
typedef const uint16_t uc16;

/* 167 */
typedef const uint8_t uc8;

/* 168 */
enum $60705FDEA0C375B9A52FEDB2DE9D163C
{
  RESET = 0x0,
  SET = 0x1,
};

/* 169 */
typedef enum $60705FDEA0C375B9A52FEDB2DE9D163C FlagStatus;

/* 170 */
typedef enum $60705FDEA0C375B9A52FEDB2DE9D163C ITStatus;

/* 171 */
enum $E39CFF9C17D0046B28FF70724AA1ADE2
{
  DISABLE = 0x0,
  ENABLE = 0x1,
};

/* 172 */
typedef enum $E39CFF9C17D0046B28FF70724AA1ADE2 FunctionalState;

/* 173 */
enum $FC6B1CC64F2CCC7AAFB80F683E022E4B
{
  ERROR = 0x0,
  SUCCESS = 0x1,
};

/* 174 */
typedef enum $FC6B1CC64F2CCC7AAFB80F683E022E4B ErrorStatus;

/* 175 */
union $713AF37D45A7EAB99BE18D502EF4122A::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 176 */
struct $713AF37D45A7EAB99BE18D502EF4122A
{
  volatile union $713AF37D45A7EAB99BE18D502EF4122A::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 177 */
union $485BFC68305CA6986DCD217E426A26CF::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 178 */
struct $485BFC68305CA6986DCD217E426A26CF
{
  volatile union $485BFC68305CA6986DCD217E426A26CF::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 179 */
union $134E37393E0C78982C570DA062B0217B::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 180 */
struct $134E37393E0C78982C570DA062B0217B
{
  volatile union $134E37393E0C78982C570DA062B0217B::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 181 */
union $99A520D8956A841799C214C9E43ACBE5::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 182 */
struct $99A520D8956A841799C214C9E43ACBE5
{
  volatile union $99A520D8956A841799C214C9E43ACBE5::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 183 */
union $DC18B1E5DB85C031D898702ED403E1CC::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 184 */
struct $DC18B1E5DB85C031D898702ED403E1CC
{
  volatile union $DC18B1E5DB85C031D898702ED403E1CC::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 185 */
union $22D9A703EA57A3A435DF46F6C7B72BA0::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 186 */
struct $22D9A703EA57A3A435DF46F6C7B72BA0
{
  volatile union $22D9A703EA57A3A435DF46F6C7B72BA0::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 187 */
union $AB9F8198E2B091A603082614A2D06825::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 188 */
struct $AB9F8198E2B091A603082614A2D06825
{
  volatile union $AB9F8198E2B091A603082614A2D06825::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 189 */
union $2DFCB26E3CCB7D88A2653A98480911B4::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 190 */
struct $2DFCB26E3CCB7D88A2653A98480911B4
{
  volatile union $2DFCB26E3CCB7D88A2653A98480911B4::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 191 */
union $DBC14AE13487708CB56F2150F718D883::$77638BCE29433D7370DE487224EF2586
{
  volatile uint8_t u8;
  volatile uint16_t u16;
  volatile uint32_t u32;
};

/* 192 */
struct $DBC14AE13487708CB56F2150F718D883
{
  volatile union $DBC14AE13487708CB56F2150F718D883::$77638BCE29433D7370DE487224EF2586 PORT[32];
  uint32_t RESERVED0[864];
  volatile uint32_t TER;
  uint32_t RESERVED1[15];
  volatile uint32_t TPR;
  uint32_t RESERVED2[15];
  volatile uint32_t TCR;
  uint32_t RESERVED3[29];
  volatile uint32_t IWR;
  volatile uint32_t IRR;
  volatile uint32_t IMCR;
  uint32_t RESERVED4[43];
  volatile uint32_t LAR;
  volatile uint32_t LSR;
  uint32_t RESERVED5[6];
  const volatile uint32_t PID4;
  const volatile uint32_t PID5;
  const volatile uint32_t PID6;
  const volatile uint32_t PID7;
  const volatile uint32_t PID0;
  const volatile uint32_t PID1;
  const volatile uint32_t PID2;
  const volatile uint32_t PID3;
  const volatile uint32_t CID0;
  const volatile uint32_t CID1;
  const volatile uint32_t CID2;
  const volatile uint32_t CID3;
};

/* 193 */
typedef volatile int32_t vs32;

/* 194 */
typedef volatile int16_t vs16;

/* 195 */
typedef volatile int8_t vs8;

/* 196 */
typedef const volatile int32_t vsc32;

/* 197 */
typedef const volatile int16_t vsc16;

/* 198 */
typedef const volatile int8_t vsc8;

/* 199 */
typedef volatile uint32_t vu32;

/* 200 */
typedef volatile uint16_t vu16;

/* 201 */
typedef volatile uint8_t vu8;

/* 202 */
typedef const volatile uint32_t vuc32;

/* 203 */
typedef const volatile uint16_t vuc16;

/* 204 */
typedef const volatile uint8_t vuc8;

/* 205 */
struct $B3F565DFB77ED4AF567C56A9FD5A6A4A
{
  volatile uint32_t SR;
  volatile uint32_t CR1;
  volatile uint32_t CR2;
  volatile uint32_t SMPR1;
  volatile uint32_t SMPR2;
  volatile uint32_t JOFR1;
  volatile uint32_t JOFR2;
  volatile uint32_t JOFR3;
  volatile uint32_t JOFR4;
  volatile uint32_t HTR;
  volatile uint32_t LTR;
  volatile uint32_t SQR1;
  volatile uint32_t SQR2;
  volatile uint32_t SQR3;
  volatile uint32_t JSQR;
  volatile uint32_t JDR1;
  volatile uint32_t JDR2;
  volatile uint32_t JDR3;
  volatile uint32_t JDR4;
  volatile uint32_t DR;
};

/* 206 */
typedef struct $6F30188D67D6DC94A7D8F25D15EA2A85 ADC_TypeDef;

/* 385 */
struct $6F30188D67D6DC94A7D8F25D15EA2A85
{
  int SR;
  int CR1;
  int CR2;
  int SMPR1;
  int SMPR2;
  int JOFR1;
  int JOFR2;
  int JOFR3;
  int JOFR4;
  int HTR;
  int LTR;
  int SQR1;
  int SQR2;
  int SQR3;
  int JSQR;
  int JDR1;
  int JDR2;
  int JDR3;
  int JDR4;
  int DR;
};

/* 207 */
struct $B192470914146AA465F82DBFF6456F8E
{
  volatile uint32_t CSR;
  volatile uint32_t CCR;
  volatile uint32_t CDR;
};

/* 208 */
typedef struct $B192470914146AA465F82DBFF6456F8E ADC_Common_TypeDef;

/* 209 */
struct $D9B7CFA0ADD0EB6B75401087C0752408
{
  volatile uint32_t TIR;
  volatile uint32_t TDTR;
  volatile uint32_t TDLR;
  volatile uint32_t TDHR;
};

/* 210 */
typedef struct $D9B7CFA0ADD0EB6B75401087C0752408 CAN_TxMailBox_TypeDef;

/* 211 */
struct $FB7EB5D649BBC0F6FF454C530C15557D
{
  volatile uint32_t RIR;
  volatile uint32_t RDTR;
  volatile uint32_t RDLR;
  volatile uint32_t RDHR;
};

/* 212 */
typedef struct $FB7EB5D649BBC0F6FF454C530C15557D CAN_FIFOMailBox_TypeDef;

/* 213 */
struct $2AC8F91AFAC787F48F677028A1479A54
{
  volatile uint32_t FR1;
  volatile uint32_t FR2;
};

/* 214 */
typedef struct $2AC8F91AFAC787F48F677028A1479A54 CAN_FilterRegister_TypeDef;

/* 215 */
struct $DA00F08F283F201FA2D81543EEFEC827
{
  volatile uint32_t MCR;
  volatile uint32_t MSR;
  volatile uint32_t TSR;
  volatile uint32_t RF0R;
  volatile uint32_t RF1R;
  volatile uint32_t IER;
  volatile uint32_t ESR;
  volatile uint32_t BTR;
  uint32_t RESERVED0[88];
  CAN_TxMailBox_TypeDef sTxMailBox[3];
  CAN_FIFOMailBox_TypeDef sFIFOMailBox[2];
  uint32_t RESERVED1[12];
  volatile uint32_t FMR;
  volatile uint32_t FM1R;
  uint32_t RESERVED2;
  volatile uint32_t FS1R;
  uint32_t RESERVED3;
  volatile uint32_t FFA1R;
  uint32_t RESERVED4;
  volatile uint32_t FA1R;
  uint32_t RESERVED5[8];
  CAN_FilterRegister_TypeDef sFilterRegister[28];
};

/* 216 */
typedef struct $DA00F08F283F201FA2D81543EEFEC827 CAN_TypeDef;

/* 217 */
struct $F88628765685C3DCCD5AAA952F85CFCF
{
  volatile uint32_t DR;
  volatile uint8_t IDR;
  uint8_t RESERVED0;
  uint16_t RESERVED1;
  volatile uint32_t CR;
};

/* 218 */
typedef struct $F88628765685C3DCCD5AAA952F85CFCF CRC_TypeDef;

/* 219 */
struct $56F9036D71EB2476A6C05ED3A58A35BF
{
  volatile uint32_t CR;
  volatile uint32_t SWTRIGR;
  volatile uint32_t DHR12R1;
  volatile uint32_t DHR12L1;
  volatile uint32_t DHR8R1;
  volatile uint32_t DHR12R2;
  volatile uint32_t DHR12L2;
  volatile uint32_t DHR8R2;
  volatile uint32_t DHR12RD;
  volatile uint32_t DHR12LD;
  volatile uint32_t DHR8RD;
  volatile uint32_t DOR1;
  volatile uint32_t DOR2;
  volatile uint32_t SR;
};

/* 220 */
typedef struct $56F9036D71EB2476A6C05ED3A58A35BF DAC_TypeDef;

/* 221 */
struct $6D82D7C8E5C31D576275DFC44F1919D6
{
  volatile uint32_t IDCODE;
  volatile uint32_t CR;
  volatile uint32_t APB1FZ;
  volatile uint32_t APB2FZ;
};

/* 222 */
typedef struct $6D82D7C8E5C31D576275DFC44F1919D6 DBGMCU_TypeDef;

/* 223 */
struct $4342FC752072698DC732C36F875D06EA
{
  volatile uint32_t CR;
  volatile uint32_t SR;
  volatile uint32_t RISR;
  volatile uint32_t IER;
  volatile uint32_t MISR;
  volatile uint32_t ICR;
  volatile uint32_t ESCR;
  volatile uint32_t ESUR;
  volatile uint32_t CWSTRTR;
  volatile uint32_t CWSIZER;
  volatile uint32_t DR;
};

/* 224 */
typedef struct $4342FC752072698DC732C36F875D06EA DCMI_TypeDef;

/* 225 */
struct $25AC2F448C0CDC8B471CBF89F958AF05
{
  volatile uint32_t CR;
  volatile uint32_t NDTR;
  volatile uint32_t PAR;
  volatile uint32_t M0AR;
  volatile uint32_t M1AR;
  volatile uint32_t FCR;
};

/* 226 */
typedef struct $25AC2F448C0CDC8B471CBF89F958AF05 DMA_Stream_TypeDef;

/* 227 */
struct $638F5D724C4BA891BE0D40EDD9CE6BFA
{
  volatile uint32_t LISR;
  volatile uint32_t HISR;
  volatile uint32_t LIFCR;
  volatile uint32_t HIFCR;
};

/* 228 */
typedef struct $638F5D724C4BA891BE0D40EDD9CE6BFA DMA_TypeDef;

/* 229 */
struct $801B906D1FA41DC043B0C765A6EEC069
{
  volatile uint32_t MACCR;
  volatile uint32_t MACFFR;
  volatile uint32_t MACHTHR;
  volatile uint32_t MACHTLR;
  volatile uint32_t MACMIIAR;
  volatile uint32_t MACMIIDR;
  volatile uint32_t MACFCR;
  volatile uint32_t MACVLANTR;
  uint32_t RESERVED0[2];
  volatile uint32_t MACRWUFFR;
  volatile uint32_t MACPMTCSR;
  uint32_t RESERVED1[2];
  volatile uint32_t MACSR;
  volatile uint32_t MACIMR;
  volatile uint32_t MACA0HR;
  volatile uint32_t MACA0LR;
  volatile uint32_t MACA1HR;
  volatile uint32_t MACA1LR;
  volatile uint32_t MACA2HR;
  volatile uint32_t MACA2LR;
  volatile uint32_t MACA3HR;
  volatile uint32_t MACA3LR;
  uint32_t RESERVED2[40];
  volatile uint32_t MMCCR;
  volatile uint32_t MMCRIR;
  volatile uint32_t MMCTIR;
  volatile uint32_t MMCRIMR;
  volatile uint32_t MMCTIMR;
  uint32_t RESERVED3[14];
  volatile uint32_t MMCTGFSCCR;
  volatile uint32_t MMCTGFMSCCR;
  uint32_t RESERVED4[5];
  volatile uint32_t MMCTGFCR;
  uint32_t RESERVED5[10];
  volatile uint32_t MMCRFCECR;
  volatile uint32_t MMCRFAECR;
  uint32_t RESERVED6[10];
  volatile uint32_t MMCRGUFCR;
  uint32_t RESERVED7[334];
  volatile uint32_t PTPTSCR;
  volatile uint32_t PTPSSIR;
  volatile uint32_t PTPTSHR;
  volatile uint32_t PTPTSLR;
  volatile uint32_t PTPTSHUR;
  volatile uint32_t PTPTSLUR;
  volatile uint32_t PTPTSAR;
  volatile uint32_t PTPTTHR;
  volatile uint32_t PTPTTLR;
  volatile uint32_t RESERVED8;
  volatile uint32_t PTPTSSR;
  uint32_t RESERVED9[565];
  volatile uint32_t DMABMR;
  volatile uint32_t DMATPDR;
  volatile uint32_t DMARPDR;
  volatile uint32_t DMARDLAR;
  volatile uint32_t DMATDLAR;
  volatile uint32_t DMASR;
  volatile uint32_t DMAOMR;
  volatile uint32_t DMAIER;
  volatile uint32_t DMAMFBOCR;
  volatile uint32_t DMARSWTR;
  uint32_t RESERVED10[8];
  volatile uint32_t DMACHTDR;
  volatile uint32_t DMACHRDR;
  volatile uint32_t DMACHTBAR;
  volatile uint32_t DMACHRBAR;
};

/* 230 */
typedef struct $801B906D1FA41DC043B0C765A6EEC069 ETH_TypeDef;

/* 231 */
struct $25F0113F8DB033042DBD963195AB0465
{
  volatile uint32_t IMR;
  volatile uint32_t EMR;
  volatile uint32_t RTSR;
  volatile uint32_t FTSR;
  volatile uint32_t SWIER;
  volatile uint32_t PR;
};

/* 232 */
typedef struct $25F0113F8DB033042DBD963195AB0465 EXTI_TypeDef;

/* 233 */
struct $7F21A8EE6DBD463E9DB087CF83EEA138
{
  volatile uint32_t ACR;
  volatile uint32_t KEYR;
  volatile uint32_t OPTKEYR;
  volatile uint32_t SR;
  volatile uint32_t CR;
  volatile uint32_t OPTCR;
};

/* 234 */
typedef struct $7F21A8EE6DBD463E9DB087CF83EEA138 FLASH_TypeDef;

/* 235 */
struct $4FAC7409BAF4B6417CA134A6B477AC0C
{
  volatile uint32_t BTCR[8];
};

/* 236 */
typedef struct $4FAC7409BAF4B6417CA134A6B477AC0C FSMC_Bank1_TypeDef;

/* 237 */
struct $179AA1A472E7C93A2331B79FD277411B
{
  volatile uint32_t BWTR[7];
};

/* 238 */
typedef struct $179AA1A472E7C93A2331B79FD277411B FSMC_Bank1E_TypeDef;

/* 239 */
struct $A5BBED5497E82443671A667E8ED1F42D
{
  volatile uint32_t PCR2;
  volatile uint32_t SR2;
  volatile uint32_t PMEM2;
  volatile uint32_t PATT2;
  uint32_t RESERVED0;
  volatile uint32_t ECCR2;
};

/* 240 */
typedef struct $A5BBED5497E82443671A667E8ED1F42D FSMC_Bank2_TypeDef;

/* 241 */
struct $1500E1466570B09198D77EAA5FF84D2C
{
  volatile uint32_t PCR3;
  volatile uint32_t SR3;
  volatile uint32_t PMEM3;
  volatile uint32_t PATT3;
  uint32_t RESERVED0;
  volatile uint32_t ECCR3;
};

/* 242 */
typedef struct $1500E1466570B09198D77EAA5FF84D2C FSMC_Bank3_TypeDef;

/* 243 */
struct $61DE5D11EBD2DF687A1CEAEE1C8B4A4F
{
  volatile uint32_t PCR4;
  volatile uint32_t SR4;
  volatile uint32_t PMEM4;
  volatile uint32_t PATT4;
  volatile uint32_t PIO4;
};

/* 244 */
typedef struct $61DE5D11EBD2DF687A1CEAEE1C8B4A4F FSMC_Bank4_TypeDef;

/* 245 */
struct $8B4431B092A851F57C2B6D370DA15C8C
{
  volatile uint32_t MODER;
  volatile uint32_t OTYPER;
  volatile uint32_t OSPEEDR;
  volatile uint32_t PUPDR;
  volatile uint32_t IDR;
  volatile uint32_t ODR;
  volatile uint16_t BSRRL;
  volatile uint16_t BSRRH;
  volatile uint32_t LCKR;
  volatile uint32_t AFR[2];
};

/* 246 */
typedef struct $8B4431B092A851F57C2B6D370DA15C8C GPIO_TypeDef;

/* 247 */
struct $7D31C4DE1636B23417E78B7BE00DA6C4
{
  volatile uint32_t MEMRMP;
  volatile uint32_t PMC;
  volatile uint32_t EXTICR[4];
  uint32_t RESERVED[2];
  volatile uint32_t CMPCR;
};

/* 248 */
typedef struct $7D31C4DE1636B23417E78B7BE00DA6C4 SYSCFG_TypeDef;

/* 249 */
struct $3324D348CF349341194F44B965FEF8D6
{
  volatile uint16_t CR1;
  uint16_t RESERVED0;
  volatile uint16_t CR2;
  uint16_t RESERVED1;
  volatile uint16_t OAR1;
  uint16_t RESERVED2;
  volatile uint16_t OAR2;
  uint16_t RESERVED3;
  volatile uint16_t DR;
  uint16_t RESERVED4;
  volatile uint16_t SR1;
  uint16_t RESERVED5;
  volatile uint16_t SR2;
  uint16_t RESERVED6;
  volatile uint16_t CCR;
  uint16_t RESERVED7;
  volatile uint16_t TRISE;
  uint16_t RESERVED8;
};

/* 250 */
typedef struct $3324D348CF349341194F44B965FEF8D6 I2C_TypeDef;

/* 251 */
struct $E86F6A76D1E52E654108D105DEBAF7EA
{
  volatile uint32_t KR;
  volatile uint32_t PR;
  volatile uint32_t RLR;
  volatile uint32_t SR;
};

/* 252 */
typedef struct $E86F6A76D1E52E654108D105DEBAF7EA IWDG_TypeDef;

/* 253 */
struct $848AD019D53CF335EA4DC806F3C68E53
{
  volatile uint32_t CR;
  volatile uint32_t CSR;
};

/* 254 */
typedef struct $848AD019D53CF335EA4DC806F3C68E53 PWR_TypeDef;

/* 255 */
struct $EAAA1ED947650EF57BD1E598F51AF9DC
{
  volatile uint32_t CR;
  volatile uint32_t PLLCFGR;
  volatile uint32_t CFGR;
  volatile uint32_t CIR;
  volatile uint32_t AHB1RSTR;
  volatile uint32_t AHB2RSTR;
  volatile uint32_t AHB3RSTR;
  uint32_t RESERVED0;
  volatile uint32_t APB1RSTR;
  volatile uint32_t APB2RSTR;
  uint32_t RESERVED1[2];
  volatile uint32_t AHB1ENR;
  volatile uint32_t AHB2ENR;
  volatile uint32_t AHB3ENR;
  uint32_t RESERVED2;
  volatile uint32_t APB1ENR;
  volatile uint32_t APB2ENR;
  uint32_t RESERVED3[2];
  volatile uint32_t AHB1LPENR;
  volatile uint32_t AHB2LPENR;
  volatile uint32_t AHB3LPENR;
  uint32_t RESERVED4;
  volatile uint32_t APB1LPENR;
  volatile uint32_t APB2LPENR;
  uint32_t RESERVED5[2];
  volatile uint32_t BDCR;
  volatile uint32_t CSR;
  uint32_t RESERVED6[2];
  volatile uint32_t SSCGR;
  volatile uint32_t PLLI2SCFGR;
};

/* 256 */
typedef struct $EAAA1ED947650EF57BD1E598F51AF9DC RCC_TypeDef;

/* 257 */
struct $0D24900B03FEBC1FE9BC805F01EBFECF
{
  volatile uint32_t TR;
  volatile uint32_t DR;
  volatile uint32_t CR;
  volatile uint32_t ISR;
  volatile uint32_t PRER;
  volatile uint32_t WUTR;
  volatile uint32_t CALIBR;
  volatile uint32_t ALRMAR;
  volatile uint32_t ALRMBR;
  volatile uint32_t WPR;
  uint32_t RESERVED1;
  uint32_t RESERVED2;
  volatile uint32_t TSTR;
  volatile uint32_t TSDR;
  uint32_t RESERVED3;
  uint32_t RESERVED4;
  volatile uint32_t TAFCR;
  uint32_t RESERVED5;
  uint32_t RESERVED6;
  uint32_t RESERVED7;
  volatile uint32_t BKP0R;
  volatile uint32_t BKP1R;
  volatile uint32_t BKP2R;
  volatile uint32_t BKP3R;
  volatile uint32_t BKP4R;
  volatile uint32_t BKP5R;
  volatile uint32_t BKP6R;
  volatile uint32_t BKP7R;
  volatile uint32_t BKP8R;
  volatile uint32_t BKP9R;
  volatile uint32_t BKP10R;
  volatile uint32_t BKP11R;
  volatile uint32_t BKP12R;
  volatile uint32_t BKP13R;
  volatile uint32_t BKP14R;
  volatile uint32_t BKP15R;
  volatile uint32_t BKP16R;
  volatile uint32_t BKP17R;
  volatile uint32_t BKP18R;
  volatile uint32_t BKP19R;
};

/* 258 */
typedef struct $0D24900B03FEBC1FE9BC805F01EBFECF RTC_TypeDef;

/* 259 */
struct $E9EBDB7DF8A2CC7D91FEC521BA0FA77D
{
  volatile uint32_t POWER;
  volatile uint32_t CLKCR;
  volatile uint32_t ARG;
  volatile uint32_t CMD;
  const volatile uint32_t RESPCMD;
  const volatile uint32_t RESP1;
  const volatile uint32_t RESP2;
  const volatile uint32_t RESP3;
  const volatile uint32_t RESP4;
  volatile uint32_t DTIMER;
  volatile uint32_t DLEN;
  volatile uint32_t DCTRL;
  const volatile uint32_t DCOUNT;
  const volatile uint32_t STA;
  volatile uint32_t ICR;
  volatile uint32_t MASK;
  uint32_t RESERVED0[2];
  const volatile uint32_t FIFOCNT;
  uint32_t RESERVED1[13];
  volatile uint32_t FIFO;
};

/* 260 */
typedef struct $E9EBDB7DF8A2CC7D91FEC521BA0FA77D SDIO_TypeDef;

/* 261 */
struct $ADF5481997292F1165C69655C05271F1
{
  volatile uint16_t CR1;
  uint16_t RESERVED0;
  volatile uint16_t CR2;
  uint16_t RESERVED1;
  volatile uint16_t SR;
  uint16_t RESERVED2;
  volatile uint16_t DR;
  uint16_t RESERVED3;
  volatile uint16_t CRCPR;
  uint16_t RESERVED4;
  volatile uint16_t RXCRCR;
  uint16_t RESERVED5;
  volatile uint16_t TXCRCR;
  uint16_t RESERVED6;
  volatile uint16_t I2SCFGR;
  uint16_t RESERVED7;
  volatile uint16_t I2SPR;
  uint16_t RESERVED8;
};

/* 262 */
typedef struct $ADF5481997292F1165C69655C05271F1 SPI_TypeDef;

/* 263 */
struct $4B71AE111F670DCE50BA2A8DEC9E620C
{
  volatile uint16_t CR1;
  uint16_t RESERVED0;
  volatile uint16_t CR2;
  uint16_t RESERVED1;
  volatile uint16_t SMCR;
  uint16_t RESERVED2;
  volatile uint16_t DIER;
  uint16_t RESERVED3;
  volatile uint16_t SR;
  uint16_t RESERVED4;
  volatile uint16_t EGR;
  uint16_t RESERVED5;
  volatile uint16_t CCMR1;
  uint16_t RESERVED6;
  volatile uint16_t CCMR2;
  uint16_t RESERVED7;
  volatile uint16_t CCER;
  uint16_t RESERVED8;
  volatile uint32_t CNT;
  volatile uint16_t PSC;
  uint16_t RESERVED9;
  volatile uint32_t ARR;
  volatile uint16_t RCR;
  uint16_t RESERVED10;
  volatile uint32_t CCR1;
  volatile uint32_t CCR2;
  volatile uint32_t CCR3;
  volatile uint32_t CCR4;
  volatile uint16_t BDTR;
  uint16_t RESERVED11;
  volatile uint16_t DCR;
  uint16_t RESERVED12;
  volatile uint16_t DMAR;
  uint16_t RESERVED13;
  volatile uint16_t OR;
  uint16_t RESERVED14;
};

/* 264 */
typedef struct $4B71AE111F670DCE50BA2A8DEC9E620C TIM_TypeDef;

/* 265 */
struct $E8A75A13E05906A4958D62EE8D55AAF9
{
  volatile uint16_t SR;
  uint16_t RESERVED0;
  volatile uint16_t DR;
  uint16_t RESERVED1;
  volatile uint16_t BRR;
  uint16_t RESERVED2;
  volatile uint16_t CR1;
  uint16_t RESERVED3;
  volatile uint16_t CR2;
  uint16_t RESERVED4;
  volatile uint16_t CR3;
  uint16_t RESERVED5;
  volatile uint16_t GTPR;
  uint16_t RESERVED6;
};

/* 266 */
typedef struct $E8A75A13E05906A4958D62EE8D55AAF9 USART_TypeDef;

/* 267 */
struct $04627CD25D984FF7B59A8C62462E9EC5
{
  volatile uint32_t CR;
  volatile uint32_t CFR;
  volatile uint32_t SR;
};

/* 268 */
typedef struct $04627CD25D984FF7B59A8C62462E9EC5 WWDG_TypeDef;

/* 269 */
struct $29DAE492328858BBDFC356404443F032
{
  volatile uint32_t CR;
  volatile uint32_t SR;
  volatile uint32_t DR;
  volatile uint32_t DOUT;
  volatile uint32_t DMACR;
  volatile uint32_t IMSCR;
  volatile uint32_t RISR;
  volatile uint32_t MISR;
  volatile uint32_t K0LR;
  volatile uint32_t K0RR;
  volatile uint32_t K1LR;
  volatile uint32_t K1RR;
  volatile uint32_t K2LR;
  volatile uint32_t K2RR;
  volatile uint32_t K3LR;
  volatile uint32_t K3RR;
  volatile uint32_t IV0LR;
  volatile uint32_t IV0RR;
  volatile uint32_t IV1LR;
  volatile uint32_t IV1RR;
};

/* 270 */
typedef struct $29DAE492328858BBDFC356404443F032 CRYP_TypeDef;

/* 271 */
struct $1B6AD946073B983D9915C27DEB9E9BCE
{
  volatile uint32_t CR;
  volatile uint32_t DIN;
  volatile uint32_t STR;
  volatile uint32_t HR[5];
  volatile uint32_t IMR;
  volatile uint32_t SR;
  uint32_t RESERVED[52];
  volatile uint32_t CSR[51];
};

/* 272 */
typedef struct $1B6AD946073B983D9915C27DEB9E9BCE HASH_TypeDef;

/* 273 */
struct $BC428EB4FC53C198E58FCF3D3D226674
{
  volatile uint32_t CR;
  volatile uint32_t SR;
  volatile uint32_t DR;
};

/* 274 */
typedef struct $BC428EB4FC53C198E58FCF3D3D226674 RNG_TypeDef;

/* 275 */
struct $0A2BF7BFF3B1D7D70E290928FF8D6BFB
{
  uint8_t bVarNum;
  uint8_t *bVar;
};

/* 276 */
typedef struct $0A2BF7BFF3B1D7D70E290928FF8D6BFB PACK_VAR_INFO;

/* 277 */
struct $87F65B12CD9DD27B1036D48FD543FC60
{
  uint32_t uiCalcID;
  uint8_t bPidNum;
  uint8_t *bPid;
  uint8_t bPosNum;
  uint8_t *bPos;
  uint8_t bExVarNum;
  uint8_t *bExVar;
  uint8_t *bActPid;
  uint8_t *bActPos;
  uint8_t *bActData;
};

/* 278 */
typedef struct $87F65B12CD9DD27B1036D48FD543FC60 DS_PACK_INFO;

/* 279 */
struct DS_ITEM_INFO
{
  uint16_t Index;
  uint32_t NameId;
  uint8_t Condition;
  uint8_t AnsFormEnt;
  CMD_DATA_TYPE CdtnCmdData;
  CMD_DATA_TYPE DataCmdData;
  PACK_VAR_INFO CondPackInfo;
  DS_PACK_INFO DsPackInfo;
};

/* 280 */
struct $E29A5B03874A6B1740F60DBE7F21F55B
{
  uint32_t SetAddr;
  uint16_t EntryCmdNum;
  uint16_t *EntryCmdIndex;
  CMD_DATA_TYPE *EntryCmdData;
  uint16_t InitCmdNum;
  uint16_t *InitCmdIndex;
  CMD_DATA_TYPE *InitCmdData;
  uint8_t Select;
  uint8_t ComErrWay;
  uint32_t DsGroupAddr;
  uint8_t bIniPackType;
  PACK_VAR_INFO *IniPackInfo;
  uint8_t bCondPackType;
  uint8_t bCondCmdNum;
  PACK_VAR_INFO *CondPackCmd;
  uint8_t bDsPackType;
  uint8_t bDsCmdNum;
  PACK_VAR_INFO *DsPackCmd;
  uint16_t DsCount;
  DS_ITEM_INFO *DsItemInfo;
  uint8_t ExitCmdNum;
  uint16_t *ExitCmdIndex;
  CMD_DATA_TYPE *ExitCmdData;
};

/* 281 */
typedef struct $E29A5B03874A6B1740F60DBE7F21F55B DS_SYS_INFO;

/* 282 */
enum enum_1
{
};

/* 283 */
enum BitAction
{
};

/* 284 */
enum $5E068A3EDE4DDFA8FBCB9B737FF88153
{
  Bit_RESET = 0x0,
  Bit_SET = 0x1,
};

/* 285 */
struct CMPHY_Relay
{
  unsigned __int8 InputChannel;
  unsigned __int8 OutputChannel;
  unsigned __int8 CANH;
  char CANL;
  unsigned __int8 CommType;
  char LogicType;
  char LevelType;
  unsigned __int8 LLine;
  unsigned __int8 Dts;
  char field_9;
  char field_A;
  char field_B;
};

/* 286 */
struct $CF7E8F6A031E34D4717BC68678F12323
{
  uint32_t USART_BaudRate;
  uint16_t USART_WordLength;
  uint16_t USART_StopBits;
  uint16_t USART_Parity;
  uint16_t USART_Mode;
  uint16_t USART_HardwareFlowControl;
};

/* 287 */
typedef struct $CF7E8F6A031E34D4717BC68678F12323 USART_InitTypeDef;

/* 288 */
struct $2B2B06AA092658E0C5782DA3412CB07A
{
  uint32_t SYSCLK_Frequency;
  uint32_t HCLK_Frequency;
  uint32_t PCLK1_Frequency;
  uint32_t PCLK2_Frequency;
};

/* 289 */
typedef struct $2B2B06AA092658E0C5782DA3412CB07A RCC_ClocksTypeDef;

/* 290 */
enum $1B4C91E0234C7ADB4EC30AE7747C2B3E
{
  GPIO_Mode_IN = 0x0,
  GPIO_Mode_OUT = 0x1,
  GPIO_Mode_AF = 0x2,
  GPIO_Mode_AN = 0x3,
};

/* 291 */
typedef enum $1B4C91E0234C7ADB4EC30AE7747C2B3E GPIOMode_TypeDef;

/* 292 */
enum $4A03713F29A4A2361AB15B3B392A0DB4
{
  GPIO_Speed_2MHz = 0x0,
  GPIO_Speed_25MHz = 0x1,
  GPIO_Speed_50MHz = 0x2,
  GPIO_Speed_100MHz = 0x3,
};

/* 293 */
typedef enum $4A03713F29A4A2361AB15B3B392A0DB4 GPIOSpeed_TypeDef;

/* 294 */
enum $1BD8684045763BB4DA1D9227CFCC24B4
{
  GPIO_OType_PP = 0x0,
  GPIO_OType_OD = 0x1,
};

/* 295 */
typedef enum $1BD8684045763BB4DA1D9227CFCC24B4 GPIOOType_TypeDef;

/* 296 */
enum $27C71055E0C60411B68EB4D469517D72
{
  GPIO_PuPd_NOPULL = 0x0,
  GPIO_PuPd_UP = 0x1,
  GPIO_PuPd_DOWN = 0x2,
};

/* 297 */
typedef enum $27C71055E0C60411B68EB4D469517D72 GPIOPuPd_TypeDef;

/* 298 */
struct __declspec(align(4)) $22F63DB50598A99404E87D3640384F68
{
  uint32_t GPIO_Pin;
  char GPIO_Mode;
  char GPIO_Speed;
  char GPIO_OType;
  char GPIO_PuPd;
};

/* 299 */
typedef struct $22F63DB50598A99404E87D3640384F68 GPIO_InitTypeDef;

/* 300 */
struct $C0CB3F465E61236E347869884FAECC35
{
  uint16_t TIM_Prescaler;
  uint16_t TIM_CounterMode;
  uint32_t TIM_Period;
  uint16_t TIM_ClockDivision;
  uint8_t TIM_RepetitionCounter;
};

/* 301 */
typedef struct $C0CB3F465E61236E347869884FAECC35 TIM_TimeBaseInitTypeDef;

/* 302 */
struct COM_PORTMODE
{
  int BaudRate;
  int WordLength;
  int StopBits;
  int Parity;
};

/* 303 */
struct __declspec(align(4)) $7ECB7360C48C64025C5D911D5CD448ED
{
  volatile unsigned __int8 m_chState;
  unsigned __int8 m_PakType;
  volatile int m_nMScount;
  int m_nFrameTime;
  int m_nBtyetime;
  char m_Idletime;
  char m_Idletime1;
  char m_Idletime2;
  char m_Idletime3;
  int m_Maxwaittime;
  int m_VehFrametime;
  int m_nHoldLen;
};

/* 305 */
struct __declspec(align(4)) $FEF11FD739EAF0548A1B68779390E37F
{
  unsigned __int8 linkType;
  unsigned int IdleTime;
  unsigned __int8 rightState;
  unsigned int timeCount;
  unsigned __int8 idleSendLen;
  unsigned __int8 idleRecvLen;
  unsigned __int8 dataBuf[50];
  unsigned __int8 chCount;
  unsigned __int8 linkState;
  char field_46;
  char field_47;
};

/* 306 */
typedef struct $FEF11FD739EAF0548A1B68779390E37F SET_LINK_KEEP;

/* 307 */
struct ST2784Addr
{
  int GPIOAddr;
  int Val_1;
  int Val_2;
  int TIM2_BASEAddr;
  int Val_3;
  int Val_4;
  int Val_5;
  int Val_6;
  int GPIOABddr;
  int Val_7;
  int Val_8;
  int TIM3_BASEAddr;
  int Val_9;
};

/* 308 */
struct __declspec(align(4)) $896CDB5006EE8FE6C0453441F6D0D1CD
{
  unsigned int PakLenth;
  unsigned __int8 *PakdataAddr;
};

/* 309 */
typedef struct $896CDB5006EE8FE6C0453441F6D0D1CD SC_PAKRECV;

/* 310 */
struct __declspec(align(4)) SC_PAKSEND
{
  unsigned int PakLenth;
  unsigned __int8 *PakdataAddr;
};

/* 311 */
struct __declspec(align(4)) $D4AA1D7365E8A81C3027893E51471B2D
{
  volatile unsigned __int8 m_chState;
  volatile int m_nMScount;
  int m_nFrameTime;
  int m_nBtyetime;
  int m_Idletime;
  int m_ReserveTime;
  int m_Maxwaittime;
  char m_chTemp[128];
  unsigned __int8 *m_Senddata;
  char m_chHoldDig[10];
  unsigned __int8 m_chHoldDataLen;
  unsigned __int8 m_LinkFG;
  unsigned __int8 m_Framecount;
  unsigned __int8 m_Reverse;
  volatile unsigned __int8 m_chCount;
  unsigned __int8 m_Lenth;
  unsigned __int8 m_SendFinishFlag;
  unsigned __int8 m_PakMode;
};

/* 312 */
typedef struct $D4AA1D7365E8A81C3027893E51471B2D SC_CML_KWP1281;

/* 313 */
struct data_info
{
  unsigned __int8 number;
  unsigned __int8 timers;
  unsigned __int8 length_pos;
  unsigned __int8 length;
  unsigned __int8 data[20];
};

/* 314 */
struct Benzdata_info
{
  unsigned __int8 number;
  unsigned __int8 timers;
  unsigned __int8 pos;
  unsigned __int8 length;
  unsigned __int8 data[20];
  unsigned int id_number;
};

/* 315 */
struct __unaligned __declspec(align(1)) CanTxMsg
{
  int StdId;
  int ExtId;
  char IDE;
  char RTR;
  char DLC;
  char Data[8];
};

/* 316 */
struct __declspec(align(4)) $2CEB727B7D3A2B9EA9181F47F060E382
{
  int StdId;
  unsigned int ExtId;
  unsigned __int8 IDE;
  unsigned __int8 RTR;
  unsigned __int8 DLC;
  unsigned __int8 Data[8];
  unsigned __int8 FMI;
};

/* 317 */
typedef struct $2CEB727B7D3A2B9EA9181F47F060E382 CanRxMsg;

/* 318 */
struct stlh
{
  __int16 Mode;
  __int16 TotalTime;
  int SuccessFlagNum;
};

/* 342 */
struct __declspec(align(2)) CmdInfoSt22
{
  unsigned __int8 Num1;
  unsigned __int8 Num2;
  char field_2;
  char Len3;
  unsigned __int16 Val4;
  unsigned __int8 Val6;
  unsigned __int8 CmdLen6;
  char CmdBuf8[2];
  __int16 ValA;
  unsigned __int16 ValC;
  unsigned __int8 ValE;
  char field_F;
  char field_10;
  unsigned __int8 Len11;
  __int16 Buf12[7];
  unsigned __int8 Len20;
  char Buf21[9];
  unsigned __int16 DatavL2A;
  unsigned __int8 DataVal2C;
  unsigned __int8 LEN2D;
  char CmdBuf2E[8];
  unsigned __int8 CmdLen36;
  unsigned __int8 CmdBuf37[3];
  unsigned __int8 Len3A;
  unsigned __int8 Buf3B[9];
  unsigned __int8 Len44;
  char field_45;
  unsigned __int16 Val_46;
  unsigned __int8 Buf48;
  char field_49[55];
  unsigned __int16 field_80;
  unsigned __int8 field_82;
  char field_83[25];
  unsigned __int16 field_9C[4];
  char BufA4;
  char field_A5;
  unsigned __int8 field_A6[16];
  char field_B6;
  unsigned __int8 LenB7;
  char field_B8;
  char field_B9;
  unsigned __int16 CMdBufLenB9;
  unsigned __int8 LenBB;
  unsigned __int8 field_BC[8];
  unsigned __int8 XXCount;
  char XXXBuf[6];
  __int16 CmdBufCB;
  char CmdBufCD;
  char field_CE;
  char field_CF;
  unsigned __int8 field_D0;
  unsigned __int8 BufD1[7];
  unsigned __int8 CmdLemD7;
  char field_D8;
  char field_D9[22];
  unsigned __int8 ValF1;
  char BufF2[6];
  unsigned __int16 field_F8[3];
  unsigned __int16 ValueFC;
  unsigned __int16 CmdOmdex;
};

/* 319 */
struct __unaligned __declspec(align(1)) DsSt
{
  __int16 DsNum;
  __int16 field_2;
  char field_4;
  char field_5;
  char field_6;
  char field_7;
  void *field_8[2];
  char field_10[2044];
  __int16 DsXXCount;
  CmdInfoSt22 CmdInfoArr80E[104];
  __int16 field_70DE;
  void *DsShowInfoAddr;
  __int16 CalInfoCount;
  char field_70E6;
  char field_70E7;
  int field_70E8;
  void *DsCalcArr;
  __int16 DSPackNum;
  __int16 field_70F2;
  int field_70F4;
  void *maloc24hAddrArr;
  void *DsCmdArr;
  char field_7100;
  unsigned __int8 DsxxNum;
  char field_7102;
  char DsItemCount;
  char field_7104;
};

/* 320 */
struct __declspec(align(4)) FreeFrzSt
{
  char field_0[11];
  unsigned __int8 DsCount;
  DsSt **DsInfo;
  int field_10;
  int field_14;
  char field_18;
  char field_19;
  char field_1A;
  char field_1B[28915];
  char field_710E;
  char field_710F;
  int DtcArr[137427];
};

/* 321 */
struct DiagCodeP5
{
  char field_0[41024];
  char field_A040;
  char field_A041[8192];
  char field_C041[8192];
  char field_E041[8192];
  char field_10041[8192];
  char field_12041[8192];
  char field_14041[8192];
  char field_16041[8192];
  char field_18041[54227];
  char field_25414;
};

/* 322 */
struct __declspec(align(4)) SpecInfoSt
{
  char SpecNUm;
  char field_1;
  __int16 field_2;
  int field_4;
  SpecDetailInfo *SpecDetailArr;
  __int16 SizeCount;
  __int16 field_E;
  int SpecNumArr[16];
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
  int field_6C;
  int field_70;
  int field_74;
  int field_78;
  int field_7C;
  int field_80;
  int field_84;
  int field_88;
  int field_8C;
  int field_90;
  int field_94;
  int field_98;
  int field_9C;
  int field_A0;
  int field_A4;
  int field_A8;
  int field_AC;
  int field_B0;
  char field_B4[314];
  char field_1EE;
  char field_1EF;
  char field_1F0;
  char field_1F1;
  char field_1F2;
  char field_1F3;
  char field_1F4;
  char field_1F5;
  char field_1F6;
  char field_1F7[272];
  char field_307;
  int field_308;
  int field_30C;
  int field_310;
  int field_314;
  int field_318;
  int field_31C;
  __int16 field_320;
  __unaligned __declspec(align(1)) int field_322;
  __unaligned __declspec(align(1)) int field_326;
  __unaligned __declspec(align(1)) int field_32A;
  char field_32E;
  char field_32F;
  __int16 field_330[14];
  __int16 field_34C;
  char field_34E;
  __unaligned __declspec(align(1)) int field_34F;
  __unaligned __declspec(align(1)) int field_353;
  char field_357;
  __int16 field_358[180];
  char field_4BF;
  char field_4C0;
  char CmdLen;
  char field_4C2;
  char field_4C3[217];
  char field_59C;
  char field_59D[71];
  char field_5E5;
  char field_5E6;
  char field_5E7;
  int field_5E4;
  char field_5E8[10504];
  int kkNum;
  char xxNum;
  char field_2EF5;
  char field_2EF6;
  char field_2EF7;
  char field_2EF8;
  char field_2EF9;
  char field_2EFA;
  char field_2EFB;
};

/* 323 */
struct __declspec(align(4)) SpecDetailInfo
{
  char Num;
  char field_1;
  char field_2;
  char field_3;
  int SpecDetailFunName;
  __int16 TwoByteOffset;
  char field_A;
  char field_B;
  int DWORDValue;
  unsigned __int16 FunCCaseVal;
  char field_12;
  char field_13;
  int unknowVal4Byte;
  int unknowVal4Byte2;
  __int16 unknowVal2Byte3;
  char field_1E;
  char field_1F;
  int unknowVal4Byte4;
  int field_24;
};

/* 324 */
struct __declspec(align(4)) EcuSt
{
  unsigned __int8 EucIndex;
  char field_1;
  __unaligned __declspec(align(1)) int SingleSize;
  __unaligned __declspec(align(1)) int AllocSize;
  char field_A;
  char field_B;
  char field_C;
  char field_D;
  char field_E;
  char field_F;
  char field_10;
  char field_11;
  char field_12;
  char field_13;
  char field_14;
  char field_15;
  char field_16;
  char field_17;
  char field_18;
  char field_19;
  char field_1A;
  char field_1B;
};

/* 325 */
struct __declspec(align(4)) SpecCust
{
  unsigned __int16 CustomIndex;
  char field_2;
  char field_3;
  SpecCustomizeSt *pSpecCustomize;
  char Count;
  char field_9;
  __int16 field_A;
  __int16 field_C;
  char field_E;
  char field_F;
  char field_10;
  char field_11[31103993];
  __int16 field_1DA9C0A;
  __int16 field_1DA9C0C;
  char field_1DA9C0E;
  char field_1DA9C0F;
  __int16 custindex;
  __int16 CuCount;
  void *pSpecuDetail;
};

/* 326 */
struct SpecCustomizeSt
{
  int field_0;
  unsigned __int16 field_4;
  __int16 field_6;
  __int16 BufCount;
  __int16 field_A;
  AddrSaveSt *GroupBufAddr;
  __int16 field_10;
  char field_12;
  char field_13;
  CustItemInfo *pCustInfo;
};

/* 327 */
struct AddrSaveSt
{
  CustItemInfo *AddrSaveAddr;
  int field_4;
};

/* 328 */
struct CustItemInfo
{
  int field_0;
  int field_4;
  __int16 field_8;
  __int16 field_A;
  __int16 field_C;
  __int16 field_E;
  __int16 field_10;
  __int16 field_12;
  __int16 field_14;
  __int16 field_16;
  __int16 field_18;
  __int16 field_1A;
  int field_1C;
  __int16 field_20;
  __int16 field_22;
  int field_24;
  __int16 field_28;
  __int16 field_2A;
  char field_2C;
  char field_2D;
  char field_2E;
  char field_2F;
  char field_30;
  char field_31;
  char field_32;
  char field_33;
};

/* 329 */
struct __declspec(align(4)) Elf32_Sym
{
  unsigned int st_name;
  unsigned int st_value;
  unsigned int st_size;
  unsigned __int8 st_info;
  unsigned __int8 st_other;
  unsigned __int16 st_shndx;
};

/* 330 */
struct Elf32_Rel
{
  unsigned int r_offset;
  unsigned int r_info;
};

/* 331 */
union Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249
{
  unsigned int d_val;
  unsigned int d_ptr;
};

/* 332 */
struct Elf32_Dyn
{
  int d_tag;
  union Elf32_Dyn::$A263394DDF3EC2D4B1B8448EDD30E249 d_un;
};

/* 333 */
struct Elf32_Verdef
{
  unsigned __int16 vd_version;
  unsigned __int16 vd_flags;
  unsigned __int16 vd_ndx;
  unsigned __int16 vd_cnt;
  unsigned int vd_hash;
  unsigned int vd_aux;
  unsigned int vd_next;
};

/* 334 */
struct __declspec(align(4)) Elf32_Verdaux
{
  unsigned int vda_name;
  unsigned int vda_next;
};

/* 335 */
struct __declspec(align(4)) Elf32_Verneed
{
  unsigned __int16 vn_version;
  unsigned __int16 vn_cnt;
  unsigned int vn_file;
  unsigned int vn_aux;
  unsigned int vn_next;
};

/* 336 */
struct __declspec(align(4)) Elf32_Vernaux
{
  unsigned int vna_hash;
  unsigned __int16 vna_flags;
  unsigned __int16 vna_other;
  unsigned int vna_name;
  unsigned int vna_next;
};

/* 337 */
struct $5025B35B5ED6B69042CA3F2E111FA147
{
  char IsExFrame;
  char WorkMode;
  char BaudRate;
  char FilterId[256];
  char Pin;
};

/* 338 */
struct struc_1
{
};

/* 339 */
typedef struct $5025B35B5ED6B69042CA3F2E111FA147 CAN_COM;

/* 340 */
struct __declspec(align(4)) ExceptEcuSt
{
  void *Ecu00;
  int field_4;
  int field_8;
  int field_C;
  void *Ecu10;
  void *Ecu05;
  int field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  int field_30;
  int field_34;
  void *Ecu0E;
  char *field_3C;
  int field_40;
  void *Ecu11;
  void *Ecu12;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
  int field_6C;
  int field_70;
  int field_74;
  int field_78;
  int field_7C;
  int field_80;
  int field_84;
  int field_88;
  int field_8C;
  int field_90;
  int field_94;
  int field_98;
  int field_9C;
  int field_A0;
  int field_A4;
  int field_A8;
  int field_AC;
  void *Ecu2C;
  int field_B4;
  int field_B8;
  int field_BC;
  char *Ec30;
  int field_C4;
  int field_C8;
  int field_CC;
  int field_D0;
  int field_D4;
  int field_D8;
  int field_DC;
  int field_E0;
  char *Ecu39;
  char *Ecu3A;
  int field_EC;
  int field_F0;
  int field_F4;
  int field_F8;
  int field_FC;
  int field_100[192];
};

/* 341 */
struct __declspec(align(4)) SysListInfoSt
{
  int offset;
  int SysNameID;
  int offset2;
  int PromtInfoID;
  char unknow1;
  char unknow2;
  char field_12;
  char field_13;
  int EcuFileNameID;
  unsigned __int8 judgeFlag;
  char FrzCaseNum;
  char unknow6;
  char unknow7;
  char unknow8;
  char field_1D;
  char field_1E;
  char field_1F;
  int EndFID;
  char unknow3;
  char unknow4;
  char field_26;
  char field_27;
  int SysNameID2;
  int CANRegisterNameID;
  int ReadOffset;
  int IsexitSysFlag;
  int EcuDataArrNum;
  unsigned __int8 *ArrEcuindexAddr;
  EcuSt *ArrEcuInfoAddr[256];
  char field_440;
  char field_441;
  char field_442;
  char field_443;
  int UnKnowAddrSize6F24;
  char DsFlag;
  char field_449;
  char field_44A;
  char field_44B;
  DsSt *DsSt7104;
  char field_450;
  char field_451;
  char field_452;
  char field_453;
  SpecInfoSt *SpecInfo;
  char HaveFreeFlag;
  char field_459;
  char field_45A;
  char field_45B;
  FreeFrzSt *FreezSt;
  char field_460[244];
  char field_554[256];
  int field_654[256];
  char field_A54[256];
  char field_B54[256];
  char field_C54[256];
  char field_D54[256];
  char field_E54[49000];
  int field_CDBC[92];
  __int16 field_CF2C;
  char field_CF2E;
  char field_CF2F;
  DiagCodeP5 *DiagCodeP5info;
  int field_CF34;
  int field_CF38;
  int field_CF3C;
  int UnKnowAddrSize4C;
  char Index;
  char field_CF45;
  __int16 field_CF46[50];
  char field_CFAA;
  char field_CFAB;
  __int16 field_CFAC[50];
  char ArrNUm;
  char field_D011;
  __int16 field_D012[200];
  char field_D1A2;
  char field_D1A3;
};

/* 343 */
struct __declspec(align(2)) CmdInfoSt
{
  __int16 CmdFrameNum;
  char field_2;
  char field_3;
  char field_4;
  unsigned __int8 CmdLen;
  unsigned __int8 SysCmdBuf[50];
  unsigned __int8 CmdLen2;
  unsigned __int8 SysCmdBuf2[150];
  unsigned __int8 CmdLen3;
  unsigned __int8 SysCmdBuf3[50];
};

/* 344 */
struct CmdDs
{
  __int16 field_0;
  __int16 field_2;
  __int16 field_4;
  char field_6;
  unsigned __int8 field_7[100];
  char field_6B;
  unsigned __int8 *field_6C;
};

/* 345 */
struct __unaligned __declspec(align(1)) tt_Token
{
  char AreaCode;
  char Connector;
  __int16 field_2;
  int field_4;
  int FuncConfig;
  char SysFunCfgInfo;
  char g_iCanFlag;
  __int16 field_E;
  char field_10;
  char field_11;
  char SeriesName[14];
  void *ArrEcuInfo[256];
  void *ViewArrInfo[256];
  int FinalSelID;
  int FinalSysInfoOffset;
  __int16 SysListNum;
  __int16 field_82A;
  int SysListCanUseNum;
  void *SysInfoArr;
  char pInfoAddr;
  char field_835;
  char field_836;
  char field_837;
  char field_838[120];
  int ReadOffset;
  char InitCommMode;
  char KwpCmdModeVal;
  char EnterMode;
  char Flag;
  char field_8B8;
  char field_8B9;
  __int16 gap8BA;
  int DtcDataOffset;
  int field_8C0;
  int field_8C4;
  int field_8C8;
  int field_8CC;
  int field_8D0;
  __int16 TototaOEBinDataAboutCanBPS;
  __int16 field_8D6;
  int fBps;
  int ToolID;
  char field_8E0;
  char fByteToByte;
  __int16 wPacketToPacket;
  int unknowToolID;
  int tToolID;
  char field_8EC;
  char EcuIDArrIndex;
  __int16 field_8EE;
  int EcuIDArr[4];
  char gap900[4];
  char field_904;
  char field_905;
  char PinBuf[10];
  int EcuArrNum;
  void *EcuInfoAddr;
  void *BasicfunInfoArr[256];
  __int16 field_D18;
  __int16 CmdDataInfoCount;
  CmdInfoSt CmdInfoArr[255];
  __int16 xxCount;
  __int16 field_10E1C;
  char field_10E1E;
  char field_10E1F;
  CmdInfoSt22 field_10E20[1024];
  char field_51620[32821008];
  char ReEnterSpecFunFlag;
  char field_1F9E531;
  char field_1F9E532;
  char field_1F9E533;
  SpecCust *pSpecust;
  __int16 OffsetValData;
  char field_1F9E53A;
  char field_1F9E53B;
  void *DtcIDSavepoint;
  int field_1F9E540;
  int field_1F9E544;
  char gap1F9E548[22];
  char field_1F9E55E[51916];
  char field_1FAB02A;
  char field_1FAB02B;
  __int16 ArrNum;
  char field_1FAB02E[8];
  CmdDs field_1FAB036[10];
  char field_1FAB496[27542];
  char field_1FB202C[195332];
  char DtcHisCurFFlag;
  char DtcCurIDNum;
  char HisDtcNum;
  char DeterminedDtcNUm;
  int DtcCurValARr[12];
  char gap1FE1B64[2];
  char field_1FE1B66;
  char field_1FE1B67[149];
  int DtcHistoryValArr[32];
  int field_1FE1C7C;
  char field_1FE1C80[68];
  int DetermindedDtcIDArr[27];
  char field_1FE1D30;
  char field_1FE1D31;
  char field_1FE1D32;
  char field_1FE1D33;
  char field_1FE1D34;
  char gap1FE1D35[87];
  void *DtcPathBuf;
  __int16 Dtc200Val;
  __int16 field_1FE1D92;
  int DiagWay;
  char tModeOrFreezNum;
  char ClearDtcFlag;
  char field_1FE1D9A;
  char field_1FE1D9B;
  char field_1FE1D9C[320];
  char field_1FE1EDC;
  char UseAAA;
  char field_1FE1EDE[122];
  char SpecInPos;
  char field_1FE1F59;
  __int16 field_1FE1F5A[151];
  char field_1FE2088;
  char field_1FE2089;
  char field_1FE208A;
  char field_1FE208B;
  char UnkonwAddr;
  char Size;
  char field_1FE208E;
  char field_1FE208F;
  __int16 field_1FE2090;
  __int16 field_1FE2092;
  int field_1FE2094[2000];
  char UnknowBuf[900];
  char field_1FE4358[59100];
  void *Ds1F04Addr;
  char field_1FF2A38[150];
  char field_1FF2ACE[514];
  char field_1FF2CD0;
  char field_1FF2CD1[22813623];
  char field_35B4888[10686752];
  char field_3FE59A8;
};

/* 346 */
struct DtcSt
{
  int DtcNum;
  int DTCcurOrHisID;
};

/* 347 */
struct __declspec(align(4)) DtcRecDataSt
{
  unsigned __int16 SysDtcNum;
  char field_2;
  char diagMode;
  int DtcArrNum;
  int *DtcIDArrPtr;
  char *DtcDisArrPtr;
  unsigned __int8 DtcRulerVal[4];
};

/* 348 */
struct DtcShowst
{
  char field_0;
};

/* 349 */
struct DtcGetst
{
  int field_0;
  int field_4;
};

/* 350 */
struct DtcDiagSt
{
  char DtcID;
  char field_1[28930];
  char field_7103;
};

/* 351 */
struct __unaligned __declspec(align(1)) A8InfoSt
{
  __int16 Num;
  _BYTE gap2[220566];
  char field_35D98;
};

/* 352 */
struct Ds1F04St
{
  int Arr[1985];
};

/* 353 */
struct __unaligned __declspec(align(1)) VehicleScanSt
{
  char VehicleArea;
  char field_1;
  char field_2;
  char field_3[5];
  int SelectCarID;
  char SelectCarBuf[100];
  unsigned __int8 VINArr[8][10];
  int uiIDSave;
  char ShowItemBuf[32];
  int MenuIDArr[4];
  char field_F4[124];
  unsigned __int8 TextBufArr[35][150];
  int AddFunItemBuf;
  int field_15F6;
  __int16 field_15FA;
  char field_15FC[200];
  char field_16C4[100];
  char VinArrnum;
  unsigned __int8 VINArr2[20];
  char ReadodoBuf_C717BAB1[108];
  char field_17A9;
  char field_17AA[4146];
  int field_27DC;
  char field_27E0[396];
  char field_296C;
  char field_296D[100];
  char AreaCode;
  char gbVehicleScanFlag;
};

/* 354 */
struct __unaligned __declspec(align(1)) DsShowDetailInfo
{
  char field_0[24];
  int field_18;
  int field_1C;
  int field_20;
  unsigned __int16 field_24;
  char field_26[6];
  unsigned __int16 field_2C;
  unsigned __int16 field_2E;
  int field_30;
  __int16 field_34;
  unsigned __int16 field_36;
  unsigned __int16 field_38;
  unsigned __int8 field_3A;
  unsigned __int8 field_3B;
  __int16 field_3C;
  unsigned __int8 field_3E;
  char field_3F;
  unsigned __int16 field_40;
  __int16 field_42;
  unsigned __int16 field_44;
  __int16 field_46;
  int field_48;
  char field_4C;
  unsigned __int8 field_4D;
  unsigned __int8 field_4E;
  unsigned __int16 field_4F;
  char field_51;
  unsigned __int8 field_52;
  char field_53[45];
  char field_80;
};

/* 355 */
struct __declspec(align(4)) DsCalInfo
{
  int Index;
  int ID1;
  int ID2;
};

/* 356 */
struct DsAboutSt
{
  int field_0;
  int field_4;
  char field_8[103];
  char field_6F;
};

/* 357 */
struct DsRcvSt
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  char RcvPos_01;
  char RcvPos_02;
  char field_6;
  char field_7;
  unsigned __int8 *SaveRcvAddr;
};

/* 358 */
struct __declspec(align(4)) DSInofo4C
{
  char field_0[24];
  int loopCount;
  unsigned __int16 *field_1C;
  int field_20;
  unsigned __int16 *field_24;
  unsigned __int8 *field_28;
  int field_2C;
  int field_30;
  int field_34;
  int FrameNum;
  unsigned __int16 *field_3C;
  int field_40;
  int field_44;
  int field_48;
};

/* 359 */
struct Ds24HInfo
{
  int DreamNameID;
  int field_4;
  int field_8;
  int field_C;
  int field_10;
  unsigned __int8 field_14;
  unsigned __int8 field_15;
  unsigned __int8 field_16;
  unsigned __int8 CalPOS;
  unsigned __int8 field_18;
  char unUse19;
  char unUse1A;
  char unUse1B;
  int CALcID;
  int field_20;
};

/* 360 */
struct DsCmdinfoSt
{
  unsigned __int8 field_0[5];
  char Num;
  char field_6[258];
};

/* 361 */
struct Dsstinfo
{
  int field_0;
  int field_4;
  __int16 field_8;
  __int16 field_A;
  __int16 field_C;
  __int16 field_E;
  int field_10;
  char field_14;
  char field_15;
  char field_16;
  char field_17;
  char field_18;
  char field_19;
  char field_1A;
  char field_1B;
  int field_1C;
  int field_20;
};

/* 362 */
struct DsShowItemP4St
{
  DsShowDetailInfo *field_0[255];
};

/* 363 */
struct goldTokenSt
{
  char field_0[13225];
  unsigned __int8 field_33A9[81];
  char AreaKt;
  char field_33FB;
  int *field_33FC;
  int *field_3400;
  char field_3404[317];
  unsigned __int8 field_3541;
  char field_3542;
  char field_3543;
  char field_3544;
  unsigned __int8 field_3545;
  unsigned __int16 ToolID;
  __int16 EcuID;
  unsigned __int8 field_354A;
  char field_354B[5];
  int field_3550;
  char field_3554[382078];
  char field_609D2;
  char field_609D3[3005];
  char field_61590;
  char field_61591[152303];
  char field_86880;
  char field_86881;
  char field_86882[273501];
  char field_C94DF;
};

/* 364 */
struct __unaligned __declspec(align(1)) tt_Token2
{
  char AreaCode;
  char Connector;
  __int16 field_2;
  int field_4;
  int FuncConfig;
  char SysFunCfgInfo;
  char g_iCanFlag;
  __int16 field_E;
  char field_10;
  char field_11;
  char SeriesName[14];
  void *ExceptEcuBuf;
  char field_24;
  char field_25[47];
  void *Ecu0D;
  int field_58;
  int field_5C;
  void *Ecu60;
  char field_64[956];
  char field_420[1024];
  int FinalSelID;
  int FinalSysInfoOffset;
  __int16 SysListNum;
  __int16 field_82A;
  int SysListCanUseNum;
  void *SysInfoAddr;
  void *pInfoAddr;
  char field_838[120];
  int ReadOffset;
  char InitCommMode;
  char KwpCmdModeVal;
  char field_8B6;
  char Flag;
  char field_8B8;
  char field_8B9;
  __int16 gap8BA;
  int field_8BC;
  int field_8C0;
  int field_8C4;
  int field_8C8;
  int field_8CC;
  int field_8D0;
  __int16 TototaOEBinDataAboutCanBPS;
  __int16 field_8D6;
  int fBps;
  int ToolID;
  char field_8E0;
  char fByteToByte;
  __int16 wPacketToPacket;
  int unknowToolID;
  int tToolID;
  char field_8EC;
  char EcuIDArrIndex;
  __int16 field_8EE;
  int EcuIDArr[4];
  char gap900[4];
  char field_904;
  char field_905;
  char PinBuf[10];
  int field_910;
  int field_914;
  __int16 field_918;
  char field_91A[1022];
  __int16 field_D18;
  __int16 CmdDataInfoCount;
  int field_D1C;
  char field_D20;
  char CmdLen;
  char SysEnterCmd[2566];
  char field_1728;
  char field_1729[4776];
  char field_29D1;
  char field_29D2;
  char field_29D3[55989];
  char field_10488[2450];
  char field_10E1A;
  char field_10E1B;
  char field_10E1C;
  char field_10E1D;
  __int16 field_10E1E;
  char field_10E20[12904];
  __int16 field_14088;
  __int16 field_1408A;
  char field_1408C[33072292];
  char field_1F9E530;
  char field_1F9E531;
  char field_1F9E532;
  char field_1F9E533;
  int Addr;
  __int16 OffsetValData;
  char field_1F9E53A[276562];
  int SelectItemPathAddr;
  int Num200;
  int DiagWay;
  char field_1FE1D98;
  char gap1FE1D99;
  char field_1FE1D9A;
  char field_1FE1D9B;
  char field_1FE1D9C[321];
  char field_1FE1EDD;
  char field_1FE1EDE[426];
  char field_1FE2088;
  char field_1FE2089;
  char field_1FE208A;
  char field_1FE208B;
  char field_1FE208C;
  char field_1FE208D;
  char field_1FE208E;
  char field_1FE208F;
  char gap1FE2090[33569048];
  char field_3FE59A8;
};

/* 365 */
struct DsPnc
{
  unsigned __int8 PackID;
  unsigned __int8 len;
  char field_2;
  char field_3;
  char *Buf;
};

/* 366 */
struct DsPackSt
{
  unsigned __int16 DsPackNum;
  __int16 field_2;
  DsPnc DsPckArr[257];
};

/* 367 */
struct __declspec(align(4)) SpecFunCommSt
{
  int FuncName;
  char IsSpecCommFlag;
  unsigned __int8 field_5[251];
  int MsgIDArr[250];
  __int16 BtnTypeArr[250];
  char field_6DC[250];
  char field_7D6[250];
  char field_8D0[250];
  char field_9CA[250];
  char field_AC4[250];
  char field_BBE[250];
  char field_CB8[252];
  __int16 field_DB4[250];
  char IsFlagFA8;
  char field_FA9;
  __int16 field_FAA;
  int field_FAC[45];
  char field_1060[48];
  int field_1090[36];
  char field_1120;
  char field_1121;
  char field_1122;
  char field_1123;
  int field_1124[35];
  char field_11B0[35];
  char field_11D3;
  unsigned __int8 field_11D4[44];
  unsigned __int8 field_1200[12];
  void *field_120C[10];
  char field_1234[10];
  char field_123E[502];
  char field_1434[10];
  char field_143E[302];
  int field_156C[160];
  char field_17EC[550884];
  char field_87FD0[407];
  char field_88167;
};

/* 368 */
struct SpecFunInfo
{
  unsigned __int16 field_0;
  __int16 field_2;
  int field_4;
  char field_8[14411];
  char field_3853;
};

/* 369 */
struct StCommdetail
{
  __int16 field_0;
  __int16 field_2;
  int field_4[45];
  char field_B8[48];
  int field_E8[37];
  int field_17C[35];
  char field_208[35];
  char field_22B;
  char field_22C[44];
  unsigned __int8 field_258[12];
  int field_264[56];
  int field_344[160];
  int field_5C4[80];
  char field_704;
  char field_705;
  char field_706;
  char field_707[226];
  char field_7E9;
  char field_7EA;
  char field_7EB[89];
  char field_844[52];
  int field_878;
  char field_87C;
  char field_87D;
  char field_87E[37];
  char field_8A3;
};

/* 370 */
struct __declspec(align(4)) SpecuDetail
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  int field_4;
  int field_8;
  __int16 field_C;
  char field_E;
  char field_F;
  int field_10;
  int field_14;
  char field_18;
  char field_19[7];
  char ReReadFlag;
  char field_21;
  char field_22;
  char field_23;
};

/* 371 */
struct SpeSystemEnterSt
{
  _BYTE gap0[2];
  char field_2;
  char field_3[207357];
};

/* 372 */
struct $D5B4D4100539826CAE18ABF8E876132F
{
  uint16_t TIM_OCMode;
  uint16_t TIM_OutputState;
  uint16_t TIM_OutputNState;
  uint32_t TIM_Pulse;
  uint16_t TIM_OCPolarity;
  uint16_t TIM_OCNPolarity;
  uint16_t TIM_OCIdleState;
  uint16_t TIM_OCNIdleState;
};

/* 373 */
typedef struct $D5B4D4100539826CAE18ABF8E876132F TIM_OCInitTypeDef;

/* 375 */
struct __unaligned __declspec(align(1)) Cm46C8
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  int field_4;
  char field_8[53];
  char field_3D;
  char field_3E[436];
  __int16 field_1F2;
  __int16 field_1F4[66];
  int field_278[49];
  char field_33C[8];
  char field_344[32];
  char field_364;
  char field_365;
  __int16 field_366[218];
  __int16 field_51A[6670];
  char field_3936;
};

/* 376 */
struct $C4747AD8E876D904B457550EAF816DB0
{
  uint16_t TIM_Channel;
  uint16_t TIM_ICPolarity;
  uint16_t TIM_ICSelection;
  uint16_t TIM_ICPrescaler;
  uint16_t TIM_ICFilter;
};

/* 377 */
typedef struct $C4747AD8E876D904B457550EAF816DB0 TIM_ICInitTypeDef;

/* 378 */
enum $94649FC83D788066A072C58A95BEA559
{
  EXTI_Mode_Interrupt = 0x0,
  EXTI_Mode_Event = 0x4,
};

/* 379 */
typedef enum $94649FC83D788066A072C58A95BEA559 EXTIMode_TypeDef;

/* 380 */
enum $F72AB3BDA4524585B3DD397004F30A99
{
  EXTI_Trigger_Rising = 0x8,
  EXTI_Trigger_Falling = 0xC,
  EXTI_Trigger_Rising_Falling = 0x10,
};

/* 381 */
typedef enum $F72AB3BDA4524585B3DD397004F30A99 EXTITrigger_TypeDef;

/* 382 */
struct __declspec(align(4)) $613FB9821E861DECE7AC9FBE66E6DF74
{
  uint32_t EXTI_Line;
  __int16 EXTI_Mode;
  unsigned __int8 EXTI_Trigger;
  unsigned __int8 EXTI_LineCmd;
};

/* 383 */
typedef struct $613FB9821E861DECE7AC9FBE66E6DF74 EXTI_InitTypeDef;

/* 422 */
struct StA
{
  unsigned __int8 field_0;
  char field_1;
  char field_2;
  char field_3;
  char field_4;
  char field_5;
  __int16 field_6;
  int field_8;
  int field_C;
  int field_10;
  int field_14;
};

/* 421 */
struct St373C
{
  unsigned __int8 field_0;
  unsigned __int8 field_1;
  char field_2;
  char field_3;
  __int16 field_4;
  __int16 field_6;
  char field_8;
  char field_9;
  char field_A;
  char field_B;
  unsigned int *field_C;
  _DWORD *field_10;
  int field_14;
  unsigned int *field_18[15];
  unsigned int *field_54[15];
  int field_90[15];
  unsigned int *field_CC[15];
  int field_108;
  _DWORD *field_10C;
  char field_110;
  char field_111;
  char field_112;
  char field_113;
  int field_114;
  int field_118[10];
  StA field_140;
  int field_158[14];
  int field_190[15];
  int field_1CC[15];
  int field_208[15];
  int field_244[15];
  int field_280[15];
  int field_2BC[15];
  int field_2F8[15];
  int field_334[15];
  int field_370[123];
  void (__fastcall *sub_80407AC)(St20000000 *);
  int field_560;
  void (__fastcall *NVIC_GenerateSystemReset_sub_80407FA)(St20000000 *);
  int (__fastcall *sub_8040410)(St20000000 *);
  int field_56C;
  void (__fastcall *sub_8040882)(St20000000 *, _DWORD, int);
  int (__fastcall *SendDataByUsart_sub_8040C30)(St20000000 *, unsigned __int8 *, unsigned int);
  void (__fastcall *SendDataToPhone_sub_8040D9C)(St20000000 *, unsigned __int8 *, int);
  void (__fastcall *SendDataToPhonesub_8040CAE)(St20000000 *, unsigned __int8 **, unsigned int *, int);
  int field_580;
  void (__fastcall *SetTIMUSART_sub_8040A9E)(St20000000 *, int);
  void (__fastcall *field_588)(St20000000 *);
  int (__fastcall *Pos7_case21sub_8040DB2)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *field_590)(St20000000 *, unsigned __int8 *, int);
  int (__fastcall *field_594)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *field_598)(St20000000 *, unsigned __int8 *, int);
  int (__fastcall *Pos7_case25_sub_80416EC)(St20000000 *, unsigned __int8 *, int);
  int (__fastcall *field_5A0)(St20000000 *, unsigned __int8 *, int);
  int (__fastcall *field_5A4)();
  int field_5A8;
  int field_5AC;
  int field_5B0;
  int field_5B4;
  int field_5B8;
  int field_5BC;
  int field_5C0;
  int field_5C4;
  unsigned int field_5C8;
  int field_5CC;
  int field_5D0;
  int field_5D4;
  int field_5D8;
  int field_5DC;
  int field_5E0;
  void (*field_5E4)(void);
  int field_5E8;
  int field_5EC;
};

/* 384 */
struct __unaligned __declspec(align(1)) CommSt
{
  char field_0;
  char field_1;
  unsigned __int8 field_2;
  char field_3;
  char USARTBadurateCaseVal_RCCSetFlag;
  char field_5;
  char field_6;
  char ReStartFlag0400;
  char field_8;
  char field_9;
  unsigned __int8 field_A;
  char field_B;
  char field_C;
  char field_D;
  char field_E;
  char field_F;
  __int16 field_10;
  __int16 field_12;
  unsigned int field_14;
  int field_18;
  char field_1C;
  char field_1D;
  unsigned __int16 Cnt;
  int Len;
  unsigned __int8 BlueThData[12];
  int field_30[52];
  char field_100[528];
  char field_310[16];
  char field_320[704];
  int field_5E0;
  void (**field_5E4)(void);
  int field_5E8;
  unsigned __int16 *field_5EC;
  char field_5F0[1218];
  int field_AB2;
  char field_AB6[74];
  char field_B00[1332];
  int DataLen;
  char SendToPhoneData[16];
  char field_1048[3052];
  int BlueThNum;
  unsigned __int8 BlueThToPhoneData[96];
  void (__fastcall *field_1C98)(St20000000 *);
  int field_1C9C;
  int field_1CA0;
  int field_1CA4;
  int field_1CA8;
  int field_1CAC;
  int field_1CB0;
  void (__fastcall *field_1CB4)(St20000000 *, int *, int);
  void (__fastcall *SendDataToPhonesub_8040CAE)(St20000000 *, unsigned __int8 **, unsigned __int8 **, int);
  int field_1CBC;
  int field_1CC0;
  int field_1CC4;
  int (__fastcall *field_1CC8)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *field_1CCC)(St20000000 *, unsigned __int8 *, int);
  int (__fastcall *field_1CD0)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *field_1CD4)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *field_1CD8)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *field_1CDC)(St20000000 *, unsigned __int8 *, int);
  int (__fastcall *return_0_sub_8041582_1CE0)();
  int field_1CE4;
  int field_1CE8;
  int field_1CEC;
  int field_1CF0;
  int field_1CF4;
  int field_1CF8;
  int field_1CFC;
  int field_1D00;
  int field_1D04;
  char field_1D08[832];
  __int16 field_2048;
  char field_204A[32];
  int field_206A;
  int field_206E;
  char field_2072[34];
  int field_2094;
  void (__cdecl *sub_8002042)(CommSt *token);
  void (__fastcall *field_209C)(_DWORD);
  void (__fastcall *field_20A0)(CommSt *);
  int (__fastcall *sub_8001CE6)(CommSt *);
  int field_20A8;
  void (__fastcall *sub_800214A)(_DWORD, _DWORD, _DWORD);
  int (__fastcall *UsartSendData_sub_8002422)(CommSt *, char *, unsigned int SendLen);
  void (__fastcall *SendData_sub_800258C)(CommSt *, unsigned __int8 *, int);
  void (__fastcall *sub_800249E)(CommSt *, int **, int *, int);
  void (__fastcall *field_20BC)(CommSt *);
  void (__cdecl *Set_IT_sub_8002358_20C0)(CommSt *token, int a2);
  void (__fastcall *sub_800238C)(CommSt *);
  int (__fastcall *Pos7_Case21_KeilStartFirst_sub_80025A2)(CommSt *, unsigned __int8 *, _DWORD);
  int (__fastcall *ID22sub_8002712)(CommSt *, unsigned __int8 *, int);
  int (__fastcall *ID23_sub_8002730)(CommSt *, unsigned __int8 *, _DWORD);
  int (__fastcall *ID24_sub_80027C0)(CommSt *, unsigned __int8 *, _DWORD);
  int (__fastcall *ID25_sub_80029D4)(CommSt *, unsigned __int8 *, _DWORD);
  int (__fastcall *ID26_sub_8002980)(CommSt *, unsigned __int8 *, _DWORD);
  int (__fastcall *Return_0_sub_80028FA)(CommSt *, unsigned __int8 *, _DWORD);
  int field_20E4;
  int field_20E8[51];
  unsigned __int8 PADDING[64];
  void *field_21F4[15];
  int field_2230;
  int field_2234[21];
  int field_2288;
  int field_228C[6];
  unsigned __int8 *field_22A4;
  int field_22A8;
  int field_22AC;
  int field_22B0;
  int field_22B4;
  int field_22B8;
  int field_22BC;
  void (*field_22C0)(void);
  char field_22C4[20];
  char field_22D8;
  char field_22D9;
  int field_22DA;
  char field_22DE[26];
  char field_22F8[24];
  char field_2310;
  char field_2311;
  char field_2312;
  char field_2313;
  unsigned int field_2314;
  int field_2318;
  void (__fastcall *field_231C)(St373C *, _DWORD);
  int field_2320;
  int field_2324;
  int field_2328;
  int field_232C;
  int field_2330;
  int field_2334;
  int field_2338;
  int field_233C;
  int field_2340;
  int field_2344;
  int field_2348;
  int field_234C;
  int field_2350;
  int field_2354;
  int field_2358[16];
  int field_2398[32];
  int field_2418[4];
  int field_2428;
  int field_242C[27];
  int field_2498[86];
  int field_25F0[40];
  int field_2690[10];
  int field_26B8[20];
  int field_2708;
  int field_270C;
  int field_2710;
  int field_2714;
  int field_2718;
  int field_271C;
  int field_2720;
  int field_2724;
  int field_2728;
  int field_272C[21];
  int field_2780[6];
  int field_2798[745];
  St373C field_333C;
  char field_392C[884];
  void (__fastcall *field_3CA0)(St20000000 *);
  int (__fastcall *sub_8040410)(St20000000 *);
  int field_3CA8;
  void (__fastcall *sub_8040882)(St20000000 *, _DWORD, int);
  void (__fastcall *SendDataByUsart_sub_8040C30)(St20000000 *, unsigned __int8 *, int);
  void (__fastcall *SendDataToPhone_sub_8040D9C)(St20000000 *, unsigned __int8 *, int);
  void (__fastcall *field_3CB8)(St20000000 *, unsigned __int8 **, unsigned __int8 **, int);
  void (__fastcall *field_3CBC)(St20000000 *);
  void (__fastcall *SetTIMUSART_sub_8040A9E)(St20000000 *, _DWORD);
  void (__fastcall *sub_8040AD2)(St20000000 *);
  int (__fastcall *Pos7_case21sub_8040DB2)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *ID22_sub_8040FC8)(St20000000 *, unsigned __int8 *, int);
  int (__fastcall *ID23_sub_80410B0)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *ID24_sub_8041130)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *Pos7_case25_sub_80416EC)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *ID26_sub_8041608)(St20000000 *, unsigned __int8 *, _DWORD);
  int (__fastcall *field_3CE0)();
  int field_3CE4;
  char field_3CE8[68];
  char field_3D2C[504];
  int field_3F24;
  __int16 field_3F28;
  __int16 field_3F2A;
  int field_3F2C[7];
  int field_3F48;
  int field_3F4C;
  int field_3F50;
  int field_3F54;
  int field_3F58;
  int field_3F5C;
  int field_3F60;
  int field_3F64;
  int field_3F68;
  int field_3F6C;
  int field_3F70;
  int field_3F74;
  __int16 field_3F78;
  unsigned __int16 field_3F7A;
  unsigned __int8 field_3F7C;
  char field_3F7D;
  unsigned __int8 field_3F7E;
  char field_3F7F[3];
  char field_3F82;
  int field_3F83;
  char field_3F87;
  int field_3F88;
  char field_3F8C;
  char field_3F8D;
  char field_3F8E;
  char field_3F8F[89];
  int field_3FE8;
  int field_3FEC;
  int field_3FF0;
  int field_3FF4;
  int field_3FF8;
  char field_3FFC[132];
  int field_4080;
  char field_4084;
  char field_4085;
  char field_4086;
  char field_4087;
  char field_4088;
  char field_4089;
  char field_408A;
  char field_408B;
  char field_408C;
  char field_408D;
  char field_408E;
  char field_408F;
  char field_4090;
  char field_4091;
  char field_4092;
  unsigned __int8 field_4093;
  char field_4094;
  char field_4095;
  char field_4096[10];
  void (__fastcall *field_40A0)(CommSt *);
  int field_40A4;
  int field_40A8;
  int field_40AC;
  int field_40B0;
  void (__fastcall *field_40B4)(CommSt *, void *, int);
  void (__fastcall *field_40B8)(CommSt *, unsigned __int8 *, unsigned __int8 *, int);
  int field_40BC[106];
  int field_4264[24];
  unsigned int DelayTM;
  char field_42C8;
  char field_42C9;
  char field_42CA;
  char field_42CB;
  int WhileFlag_field_42CC;
  char field_42D0;
  char field_42D1;
  char field_42D2[31];
  int field_42F1[4];
  __int16 field_4301;
  char field_4303;
  unsigned __int8 field_4304;
  char field_4305;
  char field_4306;
  char field_4307;
  char field_4308;
  char field_4309[203];
  int field_43D4[58];
  TIM_TypeDef *field_44BC[29];
  int field_4530;
  void *CanBaseArr[2];
  GPIO_TypeDef *GPIOxArr[10];
  COM_PORTMODE SC_com_portMode;
  int DelayTime;
  int field_4578;
  int field_457C;
  unsigned __int8 field_4580;
  char field_4581;
  char field_4582;
  char field_4583;
  char field_4584;
  char field_4585;
  __int16 field_4586;
  int field_4588;
  int field_458C;
  char field_4590;
  char field_4591;
  __int16 field_4592;
  char field_4594[48];
  TIM_TypeDef *field_45C4[6];
  _BYTE gap45DC[9];
  char field_45E5;
  char field_45E6;
  char field_45E7[29];
  int field_4604;
  int field_4608;
  int field_460C;
  unsigned __int8 *field_4610;
  int field_4614;
  int field_4618;
  int field_461C;
  int field_4620;
  int field_4624;
  int field_4628;
  char field_462C;
  char field_462D;
  char field_462E[10450];
  char field_6F00;
};

/* 391 */
struct __unaligned __declspec(align(1)) St20000000
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  char UsartBadurate;
  char field_5;
  char field_6;
  char ReStartFlag;
  char field_8;
  char field_9;
  unsigned __int8 field_A;
  char field_B;
  char DataValidLen;
  char field_D;
  char field_E;
  char field_F;
  __int16 field_10;
  __int16 field_12;
  int field_14;
  int field_18;
  char field_1C;
  char field_1D;
  unsigned __int16 field_1E;
  __int16 BlueThPos;
  unsigned __int8 BoxBlueData[990];
  CommSt field_400;
  char field_7301[8192];
  char field_9301[94139];
  char field_202BC;
};

/* 386 */
struct $5C40ABD1F98A6CBDCE08A89EC6A02C0D
{
  unsigned int PakCmdID;
  unsigned int PakLenth;
  unsigned __int8 *Pakdata;
};

/* 387 */
typedef struct $5C40ABD1F98A6CBDCE08A89EC6A02C0D SC_UserPak;

/* 388 */
typedef int (__cdecl *pfnCmdLine)(int argc, unsigned __int8 *argv, unsigned __int8 *ans);

/* 390 */
struct __declspec(align(4)) CAN_InitTypeDef
{
  uint16_t CAN_Prescaler;
  uint8_t CAN_Mode;
  uint8_t CAN_SJW;
  uint8_t CAN_BS1;
  uint8_t CAN_BS2;
  char CAN_TTCM;
  char CAN_ABOM;
  char CAN_AWUM;
  char CAN_NART;
  char CAN_RFLM;
  char CAN_TXFP;
};

/* 392 */
struct $90EBC055F47289836B1A599F935A6FA3
{
  uint32_t RTC_HourFormat;
  uint32_t RTC_AsynchPrediv;
  uint32_t RTC_SynchPrediv;
};

/* 393 */
typedef struct $90EBC055F47289836B1A599F935A6FA3 RTC_InitTypeDef;

/* 395 */
struct __declspec(align(4)) $4AAC210F07440FD99B4076F71C99B835
{
  volatile unsigned __int8 m_chState;
  volatile int m_nMScount;
  CanTxMsg m_chHoldDig;
  char field_1B;
  CanRxMsg m_RXM;
  unsigned __int8 m_PakMode;
  char field_31;
  char field_32;
  char field_33;
};

/* 398 */
struct $2F3407DB4A6C5876AE58E1539D79080C
{
  volatile unsigned __int8 m_chState;
  volatile int m_nMScount;
  CanTxMsg m_chHoldDig;
  CanTxMsg m_TXM;
  CanRxMsg m_RXM;
  unsigned __int8 m_PakMode;
};

/* 399 */
typedef struct $2F3407DB4A6C5876AE58E1539D79080C SC_CML_ISO15765;

/* 400 */
struct __declspec(align(4)) $1706840CD34BC2C8E12CFE6A626229D9
{
  int m_nFrameTime;
  int m_nBtyetime;
  int m_Maxwaittime;
  unsigned __int8 m_MsTime;
  char UnknowByte;
  char field_E;
  char field_F;
};

/* 401 */
typedef struct $1706840CD34BC2C8E12CFE6A626229D9 SC_CML_ISO14230;

/* 402 */
struct $D4E323D428B4C246802A089010060B6B
{
  unsigned __int8 dataLenth;
  char data[31];
};

/* 403 */
typedef struct $D4E323D428B4C246802A089010060B6B SC_CMLISO15765ENTERFRAME;

/* 404 */
struct __declspec(align(4)) $58521CD4829B27FE83593AEF5E59177B
{
  char CanPort;
  unsigned __int8 FilterNum;
  __int16 field_2;
  unsigned int ECUID[8];
  int Mask;
  char field_28;
};

/* 405 */
typedef struct $58521CD4829B27FE83593AEF5E59177B SC_CMLISO15765para;

/* 406 */
struct __unaligned __declspec(align(2)) CAN_CONFIGPARA
{
  unsigned __int8 Badurate;
  char Mode;
  char field_2;
  char field_3;
  int *pMask;
  unsigned int *ECUID;
  unsigned __int8 FilterNum;
  char field_D[19];
  char field_20[4];
  char field_24;
  char field_25;
};

/* 407 */
struct $F390D124021282B3CA7303329D138CAD
{
  uint8_t NVIC_IRQChannel;
  uint8_t NVIC_IRQChannelPreemptionPriority;
  uint8_t NVIC_IRQChannelSubPriority;
  char NVIC_IRQChannelCmd;
};

/* 408 */
typedef struct $F390D124021282B3CA7303329D138CAD NVIC_InitTypeDef;

/* 409 */
struct $E60B89F6EBAD2B2B9C1810040821070B
{
  uint32_t DMA_Channel;
  uint32_t DMA_PeripheralBaseAddr;
  uint32_t DMA_Memory0BaseAddr;
  uint32_t DMA_DIR;
  uint32_t DMA_BufferSize;
  uint32_t DMA_PeripheralInc;
  uint32_t DMA_MemoryInc;
  uint32_t DMA_PeripheralDataSize;
  uint32_t DMA_MemoryDataSize;
  uint32_t DMA_Mode;
  uint32_t DMA_Priority;
  uint32_t DMA_FIFOMode;
  uint32_t DMA_FIFOThreshold;
  uint32_t DMA_MemoryBurst;
  uint32_t DMA_PeripheralBurst;
};

/* 410 */
typedef struct $E60B89F6EBAD2B2B9C1810040821070B DMA_InitTypeDef;

/* 411 */
struct $8ADC0FBB0ECFB7BADFB8524D82951819
{
  uint32_t ADC_Resolution;
  FunctionalState ADC_ScanConvMode;
  FunctionalState ADC_ContinuousConvMode;
  uint32_t ADC_ExternalTrigConvEdge;
  uint32_t ADC_ExternalTrigConv;
  uint32_t ADC_DataAlign;
  uint8_t ADC_NbrOfConversion;
};

/* 412 */
typedef struct $8ADC0FBB0ECFB7BADFB8524D82951819 ADC_InitTypeDef;

/* 413 */
struct $E4C3198A21DDC3DCFA331829CD8837A0
{
  uint32_t ADC_Mode;
  uint32_t ADC_Prescaler;
  uint32_t ADC_DMAAccessMode;
  uint32_t ADC_TwoSamplingDelay;
};

/* 414 */
typedef struct $E4C3198A21DDC3DCFA331829CD8837A0 ADC_CommonInitTypeDef;

/* 415 */
struct GPIOINfo
{
  GPIO_TypeDef *GPIOx;
  int GPIO_PIN;
  int Index2;
};

/* 416 */
struct $F98E1029E74E9853518F53E7C76BDD7A
{
  uint32_t FSMC_AddressSetupTime;
  uint32_t FSMC_AddressHoldTime;
  uint32_t FSMC_DataSetupTime;
  uint32_t FSMC_BusTurnAroundDuration;
  uint32_t FSMC_CLKDivision;
  uint32_t FSMC_DataLatency;
  uint32_t FSMC_AccessMode;
};

/* 417 */
typedef struct $F98E1029E74E9853518F53E7C76BDD7A FSMC_NORSRAMTimingInitTypeDef;

/* 418 */
struct $7AB72E5FD25C62B1AABCEE8AEDA681BC
{
  uint32_t FSMC_Bank;
  uint32_t FSMC_DataAddressMux;
  uint32_t FSMC_MemoryType;
  uint32_t FSMC_MemoryDataWidth;
  uint32_t FSMC_BurstAccessMode;
  uint32_t FSMC_AsynchronousWait;
  uint32_t FSMC_WaitSignalPolarity;
  uint32_t FSMC_WrapMode;
  uint32_t FSMC_WaitSignalActive;
  uint32_t FSMC_WriteOperation;
  uint32_t FSMC_WaitSignal;
  uint32_t FSMC_ExtendedMode;
  uint32_t FSMC_WriteBurst;
  FSMC_NORSRAMTimingInitTypeDef *FSMC_ReadWriteTimingStruct;
  FSMC_NORSRAMTimingInitTypeDef *FSMC_WriteTimingStruct;
};

/* 419 */
typedef struct $7AB72E5FD25C62B1AABCEE8AEDA681BC FSMC_NORSRAMInitTypeDef;

/* 420 */
struct __unaligned __declspec(align(1)) ram64007C
{
  unsigned __int16 Len;
  unsigned __int8 Buf[6];
  _BYTE gap8[2];
  int field_A[30];
  char field_82;
};

/* 423 */
struct __declspec(align(4)) $F385F9BFA956F095F47A9510F2391705
{
  uint16_t CAN_FilterIdHigh;
  uint16_t CAN_FilterIdLow;
  uint16_t CAN_FilterMaskIdHigh;
  uint16_t CAN_FilterMaskIdLow;
  uint16_t CAN_FilterFIFOAssignment;
  uint8_t CAN_FilterNumber;
  uint8_t CAN_FilterMode;
  uint8_t CAN_FilterScale;
  char CAN_FilterActivation;
};

/* 424 */
typedef struct $F385F9BFA956F095F47A9510F2391705 CAN_FilterInitTypeDef;

/* 425 */
struct $242CDB711D8E4D630430301C1BE19156
{
  uint8_t RTC_Hours;
  uint8_t RTC_Minutes;
  uint8_t RTC_Seconds;
  uint8_t RTC_H12;
};

/* 426 */
typedef struct $242CDB711D8E4D630430301C1BE19156 RTC_TimeTypeDef;

/* 427 */
struct $6FE505A6227AFDA725436DED55C39284
{
  uint8_t RTC_WeekDay;
  uint8_t RTC_Month;
  uint8_t RTC_Date;
  uint8_t RTC_Year;
};

/* 428 */
typedef struct $6FE505A6227AFDA725436DED55C39284 RTC_DateTypeDef;

/* 429 */
struct $694FF750307FB17E55CD43B639D4EB21
{
  RTC_TimeTypeDef RTC_AlarmTime;
  uint32_t RTC_AlarmMask;
  uint32_t RTC_AlarmDateWeekDaySel;
  uint8_t RTC_AlarmDateWeekDay;
};

/* 430 */
typedef struct $694FF750307FB17E55CD43B639D4EB21 RTC_AlarmTypeDef;

/* 431 */
struct $CA2B38E37E872A11C5B2F777D0E4BE96
{
  uint32_t SDIO_Argument;
  uint32_t SDIO_CmdIndex;
  uint32_t SDIO_Response;
  uint32_t SDIO_Wait;
  uint32_t SDIO_CPSM;
};

/* 432 */
typedef struct $CA2B38E37E872A11C5B2F777D0E4BE96 SDIO_CmdInitTypeDef;

/* 433 */
struct $02CED9C834DE54C2C14F3A1491EA18FB
{
  uint32_t SDIO_DataTimeOut;
  uint32_t SDIO_DataLength;
  uint32_t SDIO_DataBlockSize;
  uint32_t SDIO_TransferDir;
  uint32_t SDIO_TransferMode;
  uint32_t SDIO_DPSM;
};

/* 434 */
typedef struct $02CED9C834DE54C2C14F3A1491EA18FB SDIO_DataInitTypeDef;

/* 435 */
struct $63965038FCB205E00A7445B80D96EAFA
{
  uint32_t SDIO_ClockEdge;
  uint32_t SDIO_ClockBypass;
  uint32_t SDIO_ClockPowerSave;
  uint32_t SDIO_BusWide;
  uint32_t SDIO_HardwareFlowControl;
  uint8_t SDIO_ClockDiv;
};

/* 436 */
typedef struct $63965038FCB205E00A7445B80D96EAFA SDIO_InitTypeDef;

/* 437 */
struct __unaligned __declspec(align(1)) BlueThSt
{
  int DataLen;
  char DataF0;
  char DataF8;
  __int16 Len;
  unsigned __int8 field_8[255];
};

/* 438 */
struct St20003F5C
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
  unsigned int *field_10;
  int field_14;
  unsigned int *field_18;
  int field_1C;
  int field_20;
  int field_24;
  int field_28;
  int field_2C;
  unsigned int *field_30;
  void *field_34[63];
  unsigned int *field_130;
  int field_134;
};

/* 439 */
struct GPIOINfoINfo
{
  GPIO_TypeDef *field_0;
  int field_4;
  __int16 field_8;
  unsigned __int8 field_A;
  char field_B;
  TIM_TypeDef *field_C;
  int field_10;
  int field_14;
  unsigned __int8 field_18;
  char field_19;
  char field_1A;
  char field_1B;
  int field_1C;
  GPIO_TypeDef *field_20;
  int field_24;
  __int16 field_28;
  unsigned __int8 field_2A;
  char field_2B;
  TIM_TypeDef *field_2C;
  int field_30;
  int field_34;
  int field_38;
  int TIM_FLAG;
};

/* 440 */
struct PWMSt
{
  char field_0;
  char field_1;
  char field_2;
  char field_3;
  int field_4;
  int field_8;
  unsigned __int16 field_C[240];
  unsigned __int16 field_1EC;
  __int16 field_1EE;
  __int16 field_1F0[238];
  char field_3CC;
  char field_3CD;
  char field_3CE;
  _BYTE gap3CF[48];
  char field_3FF;
};

